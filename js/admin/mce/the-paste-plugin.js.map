{"version":3,"sources":["admin/mce/node_modules/browser-pack/_prelude.js","admin/mce/src/js/admin/mce/the-paste-plugin/index.js","admin/mce/src/js/lib/compat.js","admin/mce/src/js/lib/converter.js","admin/mce/src/js/lib/filename.js","admin/mce/src/js/lib/mime.js","admin/mce/src/js/lib/notices.js","admin/mce/src/js/lib/uploader.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","_interopRequireDefault","window","global","_converter","_notices","_uploader","__esModule","default","_classPrivateFieldInitSpec","has","TypeError","_checkPrivateRedeclaration","set","_classPrivateFieldSet","s","_assertClassBrand","_classPrivateFieldGet","get","arguments","_files","WeakMap","_isAsync","PasteOperation","init","event","preferFiles","undefined","_instance","_","destroy","setEnabled","enabled","_isEnabled","isAsync","this","hasPastedFiles","files","pastedContent","map","file","idx","src","URL","createObjectURL","concat","type","name","join","constructor","_this$clipboardData$f","clipboardData","body","target","closest","Array","from","items","filter","item","kind","loc","document","location","html","clipboardItemsToHtml","div","createElement","placeholder","querySelector","images","innerHTML","push","querySelectorAll","nodes","childNodes","node","Node","ELEMENT_NODE","TEXT_NODE","includes","nodeType","before","remove","protocol","hostname","urlToBlobUrl","dispatchEvent","Event","dumpClipboardData","prefix","forEach","el","console","log","getAsString","getAsFile","tinymce","PluginManager","add","editor","pasteFilesBtn","pasteOnOffBtn","toolbar","addButton","icon","tooltip","thepaste","l10n","paste_onoff","onPostRender","onClick","active","fetch","options","onoff_ajax_url","disabled","paste_files","preferfiles_ajax_url","preferfiles","once","wp","_createToolbar","upload_image","onclick","inlineUpload","selection","getNode","on","uploadBtn","element","nodeName","isPlaceholder","$el","find","img","sub","substring","canUpload","hide","show","crawlPastedImages","dom","doc","_ref","state","addEventListener","async","classList","catch","err","error","message","matches","pasteOperation","debugMode","editorPreProcess","content","editorPostProcess","setTimeout","off","alt","supports","svg","_wpPluploadSettings","defaults","filters","mime_types","extensions","split","webp","toDataURL","indexOf","rml","getSource","_filename","Converter","clipboardItemsToFiles","clipboardItems","Promise","resolve","reject","promises","handler","_textPlain$textHtml","str","itemToString","toLowerCase","DOMParser","parseFromString","stringToFile","imgs","elementToFile","allSettled","then","result","promise","value","fl","size","gdocsItemToSources","Object","values","JSON","parse","data","image_urls","gdocsItemToFiles","sources","blobUrlToFile","urlToFile","url","filename","schema","substr","dataUrlToFile","urlToMime","mime","dataUrlToMime","blobUrlToMime","urlToType","fileToBlobUrl","blobToFile","Blob","blob","File","safeFilename","blobUrlToBlob","blobUrl","blobUrlToType","blobUrlToDataUrl","fileToDataUrl","dataurl","match","dataUrlToType","dataUrlToBlob","arr","bstr","atob","u8arr","Uint8Array","charCodeAt","dataUrlToBlobUrl","fr","FileReader","readAsDataURL","_mime","generateFilename","suffix","_document$querySelect","_document$querySelect2","_document$querySelect3","zerofill","len","toString","default_filename","now","Date","postname","textContent","replace_values","filename_values","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getTime","toLocaleDateString","toLocaleTimeString","keys","k","replace","extension","trim","pop","exts","types","ext","_jquery","Notices","success","dismissible","_addNotice","notify","warn","classes","$headerEnd","first","insertAfter","trigger","i18n","__","_WPUploader","_compat","_defineProperty","Symbol","toPrimitive","String","Number","_toPrimitive","_toPropertyKey","defineProperty","enumerable","configurable","writable","allowedExtensions","maxFileSize","min","parseInt","max_file_size","_file","_progressHandler","_uploadedHandler","_errorHandler","_WPUploader_brand","WeakSet","WPUploader","ready","workflow","uploader","_workflow","media","open","wpActiveEditor","frame","title","copy_paste","multiple","_this","up","args","_isitMe","onProgress","percent","response","onUploaded","_removeListeners","onError","Uploader","getFilename","destructor","close","upload","_upload","dump","_addListeners","addFile","bind","unbind","_el$parentNode","progress","sizeAllowed","ErrorEvent","extensionAllowed","max","parentNode","insertBefore","the_paste","newElement","attachment","attributes","link","getUserSetting","string","image","align","video","audio","activeEditor","execCommand","replaceWith"],"mappings":"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","file":"the-paste-plugin.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import $ from 'jquery'\nimport Converter from 'converter'\nimport Notices from 'notices'\nimport Uploader from 'uploader'\n\nclass PasteOperation {\n\n\tstatic #instance = null\n\tstatic #isEnabled = true\n\n\t#files = []\n\t#isAsync = false\n\n\tstatic init( event, preferFiles = true ) {\n\t\tPasteOperation.#instance = new PasteOperation( event, preferFiles )\n\t\treturn PasteOperation.get();\n\t}\n\n\tstatic get() {\n\t\treturn PasteOperation.#instance\n\t}\n\n\tstatic destroy() {\n\t\tPasteOperation.#instance = null\n\t}\n\n\tstatic setEnabled(enabled) {\n\t\tPasteOperation.#isEnabled = enabled\n\t}\n\n\tget isAsync() {\n\t\treturn this.#isAsync\n\t}\n\n\tget hasPastedFiles() {\n\t\treturn this.files.length > 0\n\t}\n\n\tget pastedContent() {\n\t\treturn this.isAsync\n\t\t\t? '<p id=\"the-pasted-async\"></p>' // paste html\n\t\t\t: this.files.map( (file,idx) => {\n\t\t\t\t\tconst src = URL.createObjectURL(file)\n\t\t\t\t\treturn `<p><img id=\"the-pasted-${file.type}-${idx}\" src=\"${src}\" alt=\"${file.name}\" /></p>`\n\t\t\t\t} )\n\t\t\t\t.join('')\n\t}\n\n\tget files() {\n\t\treturn this.#files\n\t}\n\n\tconstructor( event, preferFiles ) {\n\t\tthis.clipboardData = event.clipboardData\n\t\tthis.body = event.target.closest('body')\n\n\t\tif ( PasteOperation.#isEnabled ) {\n\t\t\tthis.#files = Array.from( this.clipboardData.files??[] )\n\n\t\t\tif ( ! this.files.length || ! preferFiles ) {\n\t\t\t\tthis.#isAsync = Array.from( this.clipboardData.items ).filter( item => item.kind === 'string' && item.type === 'text/html' ).length > 0\n\t\t\t}\n\t\t}\n\n\t\t// no files\n\t\tif ( ! this.isAsync && ! this.files.length ) {\n\t\t\treturn\n\t\t}\n\n\t\tif ( this.isAsync ) {\n\t\t\t// google docs clipboard items present\n\t\t\t(async () => {\n\t\t\t\tlet i, u\n\t\t\t\tconst loc = new URL( document.location )\n\t\t\t\tconst html = await Converter.clipboardItemsToHtml( event.clipboardData.items )\n\t\t\t\tconst div = document.createElement('div')\n\t\t\t\tconst placeholder = this.body.querySelector('#the-pasted-async')\n\t\t\t\tconst images = []\n\n\t\t\t\tdiv.innerHTML = html\n\t\t\t\timages.push( ...Array.from(div.querySelectorAll('img')) )\n\t\t\t\tconst nodes = Array.from(div.childNodes).filter( node => [ Node.ELEMENT_NODE , Node.TEXT_NODE ].includes(node.nodeType))\n\n\t\t\t\tfor ( i=0;i<nodes.length;i++ ) {\n\t\t\t\t\tplaceholder?.before( nodes[i] )\n\t\t\t\t}\n\t\t\t\t// .forEach( node => placeholder?.before( node ) )\n\t\t\t\tplaceholder?.remove()\n\n\t\t\t\tif ( images.length ) {\n\t\t\t\t\tfor ( i=0; i < images.length; i++ ) {\n\t\t\t\t\t\tu = new URL(images[i].src)\n\t\t\t\t\t\tif ( ! ['http:','https:'].includes(u.protocol) || loc.hostname !== u.hostname ) {\n\t\t\t\t\t\t\timages[i].src = await Converter.urlToBlobUrl(images[i].src)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.body.dispatchEvent(new Event('FilesPasted'))\n\t\t\t\t}\n\t\t\t})()\n\t\t} else if ( this.body.querySelector('[src^=\"data:\"]:not(.--paste-process)') ) {\n\t\t\tthis.body.dispatchEvent(new Event('FilesPasted'))\n\t\t}\n\t}\n\n\tdumpClipboardData() {\n\t\tconst prefix = '[the paste]'\n\t\tArray.from(this.clipboardData.files).forEach( el => console.log(prefix,el) )\n\t\tArray.from(this.clipboardData.items).forEach( el => {\n\t\t\tconsole.log(prefix,el,el.kind,el.type)\n\t\t\tif ( 'string' === el.kind ) {\n\t\t\t\tel.getAsString(s=>console.log(s))\n\t\t\t} else {\n\t\t\t\tconsole.log(prefix,el.getAsFile())\n\t\t\t}\n\t\t} )\n\t\treturn this\n\t}\n}\n\n\ntinymce.PluginManager.add( 'the_paste', function(editor) {\n\n\tlet pasteFilesBtn,\n\t\tpasteOnOffBtn,\n\t\ttoolbar,\n\t\tisPlaintextState = false\n\n\n\t// enable / disable autoupload button\n\teditor.addButton( 'thepaste_onoff', {\n\t\ticon: 'thepaste_onoff',\n\t\ttooltip: thepaste.l10n.paste_onoff,\n\t\tonPostRender: function() {\n\t\t\tpasteOnOffBtn = this;\n\t\t},\n\t\tonClick: function() {\n\t\t\tthis.active( ! this.active() )\n\t\t\tfetch(`${thepaste.options.editor.onoff_ajax_url}&enabled=${this.active()?1:0}`)\n\t\t\tpasteFilesBtn.disabled( ! this.active() )\n\t\t},\n\t\tactive: thepaste.options.editor.enabled\n\t});\n\n\t// enable / disable autoupload button\n\teditor.addButton( 'thepaste_preferfiles', {\n\t\ticon: 'thepaste_preferfiles',\n\t\ttooltip: thepaste.l10n.paste_files,\n\t\tonPostRender: function() {\n\t\t\tpasteFilesBtn = this;\n\t\t},\n\t\tonClick: function() {\n\t\t\tthis.active( ! this.active() )\n\t\t\tfetch(`${thepaste.options.editor.preferfiles_ajax_url}&enabled=${this.active()?1:0}`)\n\t\t},\n\t\tdisabled: ! thepaste.options.editor.enabled,\n\t\tactive: thepaste.options.editor.preferfiles\n\t});\n\n\n\n\t// init media toolbar flyout\n\teditor.once( 'preinit', function() {\n\t\tif ( editor.wp && editor.wp._createToolbar ) {\n\n\t\t\ttoolbar = editor.wp._createToolbar( [\n\t\t\t\t'wp_img_alignleft',\n\t\t\t\t'wp_img_aligncenter',\n\t\t\t\t'wp_img_alignright',\n\t\t\t\t'wp_img_alignnone',\n\t\t\t\t'wp_img_thepaste_upload',\n\t\t\t\t'wp_img_edit',\n\t\t\t\t'wp_img_remove',\n\t\t\t] );\n\t\t}\n\t} );\n\n\t// upload button in media toolbar flyout\n\teditor.addButton('wp_img_thepaste_upload', {\n\t\ticon: 'dashicon dashicons dashicons-upload thepaste-upload',\n\t\ttooltip: thepaste.l10n.upload_image,\n\t\tonclick: function() {\n\t\t\t// wrap img, upload\n\t\t\tUploader.inlineUpload( editor.selection.getNode() )\n\t\t}\n\t});\n\n\t// setup media toolbar flyout on node change\n\teditor.on( 'wptoolbar', function( event ) {\n\t\tvar uploadBtn;\n\t\tif ( event.element.nodeName === 'IMG' && ! editor.wp.isPlaceholder( event.element ) ) {\n\t\t\tevent.toolbar = toolbar;\n\n\t\t\tuploadBtn = toolbar.$el.find('.thepaste-upload').closest('.mce-btn');\n\n\t\t\tif ( canUpload( event.element ) ) {\n\t\t\t\tuploadBtn.show();\n\t\t\t} else {\n\t\t\t\tuploadBtn.hide();\n\t\t\t}\n\t\t}\n\t} );\n\n\n\t// true if data source or blob image\n\tfunction canUpload( img ) {\n\t\tconst sub = img.src.substring(0,5);\n\t\treturn sub === 'blob:' || sub === 'data:';\n\t}\n\n\tconst crawlPastedImages = () => {\n\t\treturn Array.from( editor.dom.doc.body.querySelectorAll('[src^=\"blob:\"]:not(.--paste-process),[src^=\"data:\"]:not(.--paste-process)') )\n\t}\n\n\teditor\n\t\t.on( 'PastePlainTextToggle', ( { state } ) => {\n\t\t\tPasteOperation.setEnabled( ! state )\n\t\t\tpasteOnOffBtn.disabled( state )\n\t\t\tpasteFilesBtn.disabled( state )\n\t\t})\n\t\t.on( 'init', () => {\n\t\t\teditor.dom.doc.body.addEventListener('FilesPasted', async e => {\n\n\t\t\t\tlet i, el\n\t\t\t\tconst images = crawlPastedImages()\n\t\t\t\tfor (i=0; i<images.length;i++) {\n\t\t\t\t\tel = images[i]\n\t\t\t\t\tel.classList.add('--paste-process')\n\t\t\t\t\tUploader.inlineUpload( el ).catch( err => Notices.error( err.message, true ) || el.remove() )\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\t.on( 'Paste', e => {\n\t\t\tif ( document.body.matches('.modal-open') || ! pasteOnOffBtn.active() ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst preferFiles = !pasteFilesBtn || pasteFilesBtn.active()\n\t\t\tconst pasteOperation = PasteOperation.init( e, preferFiles ) //\n\t\t\tif ( thepaste.options.editor.debugMode ) {\n\t\t\t\tpasteOperation.dumpClipboardData()\n\t\t\t}\n\t\t\t// pasteOperation.dumpClipboardData()\n\t\t\t// nothing to paste\n\t\t\tif ( ! pasteOperation.isAsync && ! pasteOperation.files.length ) {\n\t\t\t\tPasteOperation.destroy()\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst editorPreProcess = e => {\n\t\t\t\t/*\n\t\t\t\tFF: Not Fired if clipboard contains file from FS\n\t\t\t\t*/\n\t\t\t\tlet content\n\t\t\t\t// get html from pasteOperation\n\t\t\t\tif ( content = pasteOperation.pastedContent ) {\n\t\t\t\t\te.content = content\n\t\t\t\t}\n\n\t\t\t\tPasteOperation.destroy()\n\t\t\t}\n\t\t\tconst editorPostProcess = e => {\n\t\t\t\tsetTimeout( () => editor.dom.doc.body.dispatchEvent(new Event('FilesPasted')))\n\t\t\t\teditor.off( 'PastePreProcess', editorPreProcess )\n\t\t\t\teditor.off( 'PastePostProcess', editorPostProcess )\n\t\t\t}\n\n\t\t\teditor.once( 'input', async ie => {\n\t\t\t\t/*\n\t\t\t\tFired in FF if clipboard contains file from FS\n\t\t\t\t*/\n\t\t\t\tconst images = crawlPastedImages()\n\t\t\t\tlet idx, img\n\t\t\t\tif ( ! images.length ) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tfor ( idx=0; idx < images.length; idx++ ) {\n\t\t\t\t\timg = images[idx]\n\t\t\t\t\tif ( !! pasteOperation.files[idx] ) {\n\t\t\t\t\t\timg.alt = pasteOperation.files[idx].name\n\t\t\t\t\t\timg.src = URL.createObjectURL(pasteOperation.files[idx])\n\t\t\t\t\t\t// img.src = await Converter.dataUrlToBlobUrl(img.src)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsetTimeout( () => editor.dom.doc.body.dispatchEvent(new Event('FilesPasted')))\n\n\t\t\t\tif ( images.length === pasteOperation.files.length ) {\n\t\t\t\t\t// images already processed\n\t\t\t\t\teditor.off( 'PastePreProcess', editorPreProcess )\n\t\t\t\t\teditor.off( 'PastePostProcess', editorPostProcess )\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on( 'PastePreProcess', editorPreProcess )\n\t\t\t.on( 'PastePostProcess', editorPostProcess )\n\t\t});\n} );\n","// Compatibility with [Real Media Library](https://wordpress.org/plugins/real-media-library-lite/)\n// @see https://github.com/mcguffin/the-paste/issues/47\n\nclass Supports {\n\tget svg() {\n\t\treturn _wpPluploadSettings.defaults.filters.mime_types[0].extensions.split(',').includes('svg')\n\t}\n\tget webp() {\n\t\treturn document.createElement('canvas').toDataURL('image/webp').indexOf('data:image/webp') == 0\n\t}\n}\n\nconst rml = {\n\tfile: file => {\n\t\tif ( ! file.getSource ) {\n\t\t\t// return native file object\n\t\t\t// mimic mOxie.Blob.getSource()\n\t\t\tfile.getSource = () => {\n\t\t\t\treturn file\n\t\t\t}\n\t\t}\n\t\treturn file\n\t}\n}\n\nconst supports = new Supports()\n\nmodule.exports = { rml, supports }\n","import { supports } from 'compat'\nimport { safeFilename } from 'filename'\n\n\nconst itemHandler = type => {\n\treturn {\n\t\t'text/plain': async item => {\n\t\t\tconst str = await Converter.itemToString( item )\n\t\t\tif ( str.toLowerCase().indexOf('<svg') >= 0 ) {\n\t\t\t\tconst domParser = new DOMParser()\n\t\t\t\tif ( domParser.parseFromString(str,'image/svg+xml').querySelector('svg') ) {\n\t\t\t\t\treturn [ Converter.stringToFile( str, 'image/svg+xml' ) ]\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn []\n\t\t},\n\t\t'text/html': async item => {\n\t\t\tconst loc = new URL( document.location )\n\t\t\tconst div = document.createElement('div')\n\t\t\tdiv.innerHTML = await Converter.itemToString( item )\n\n\t\t\tconst imgs = Array.from( div.querySelectorAll('img') )\n\t\t\t\t.filter( img => {\n\t\t\t\t\t// remove images from same domain\n\t\t\t\t\tconst u = new URL(img.src)\n\t\t\t\t\treturn ! ['http:','https:'].includes(u.protocol) || loc.hostname !== u.hostname\n\t\t\t\t} )\n\t\t\t\t.map( img => Converter.elementToFile(img) )\n\n\t\t\treturn new Promise( (resolve,reject) => {\n\t\t\t\tPromise.allSettled( imgs ).then( result => resolve( Array.from(result).map( promise => promise.value )) )\n\t\t\t})\n\t\t},\n\t\t// 'application/x-vnd.google-docs-image-clip+wrapped': async item => await Converter.gdocsItemToFiles( item ), // <== dont need this\n\t}[type]??(()=>new Promise((resolve,reject)=>resolve([])))\n}\n\nconst Converter = {\n\tclipboardItemsToFiles: clipboardItems => {\n\t\tconst files = []\n\t\treturn new Promise((resolve,reject) => {\n\t\t\tconst promises = Array.from(clipboardItems).map( item => {\n\t\t\t\tif ( 'string' === item.kind ) {\n\t\t\t\t\tconst handler = itemHandler(item.type)\n\t\t\t\t\treturn handler( item )\n\t\t\t\t\t\t.then( f => {\n\t\t\t\t\t\t\tfiles.push( ...f.filter( fl => fl.size > 0 ) )\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.catch( err => console.error(err) )\n\t\t\t\t}\n\t\t\t})\n\t\t\tPromise.allSettled(promises).then( () => resolve(files))\n\t\t})\n\t},\n\tclipboardItemsToHtml:  async clipboardItems => {\n\t\tlet i, item\n\t\tfor ( i=0; i < clipboardItems.length; i++ ) {\n\t\t\titem = clipboardItems[i]\n\t\t\tif ( 'string' === item.kind && 'text/html' === item.type ) {\n\t\t\t\treturn await Converter.itemToString( item )\n\t\t\t}\n\t\t}\n\t\treturn ''\n\t},\n\tgdocsItemToSources: async item => new Promise( (resolve, reject) => {\n\t\titem.getAsString( async str => {\n\t\t\tconst src = Object.values(JSON.parse(JSON.parse( str ).data ).image_urls )\n\t\t\tresolve(src)\n\t\t} )\n\t}),\n\tgdocsItemToFiles: async item => {\n\t\tlet i\n\t\tconst sources = await Converter.gdocsItemToSources(item)\n\t\tconst files = []\n\t\tfor ( i=0;i<sources.length; i++ ) {\n\t\t\tfiles.push( await Converter.blobUrlToFile(sources[i]) )\n\t\t}\n\t\treturn files\n\t},\n\titemToString: async item => new Promise( (resolve, reject) => {\n\t\titem.getAsString( str => resolve(str) )\n\t}),\n\n\telementToFile: async el => {\n\t\tconst file = await Converter.urlToFile(el.src,el.alt)\n\t\treturn file\n\t},\n\n\turlToFile: async ( url, filename = '') => {\n\t\tlet file\n\t\tconst schema = url.substr( 0, url.indexOf(':') )\n\t\tif ( 'data' === schema ) {\n\t\t\tfile = Converter.dataUrlToFile( url, filename )\n\t\t} else if ( ['blob','http','https'].includes( schema ) ) {\n\t\t\tfile = await Converter.blobUrlToFile( url, filename )\n\t\t}\n\t\treturn file\n\t},\n\turlToMime: async url => {\n\t\tconst schema = url.substr( 0, url.indexOf(':') )\n\t\tlet mime\n\t\tif ( 'data' === schema ) {\n\t\t\tmime = Converter.dataUrlToMime( url )\n\t\t} else if ( ['blob','http','https'].includes( schema ) ) {\n\t\t\tmime = await Converter.blobUrlToMime( url )\n\t\t}\n\t\treturn mime\n\t},\n\turlToType: async url => {\n\t\tconst mime = await Converter.urlToMime(url)\n\t\treturn mime.substr( 0, mime.indexOf('/'))\n\t},\n\turlToBlobUrl: async (url) => {\n\t\tconst file = await Converter.blobUrlToFile( url )\n\t\treturn Converter.fileToBlobUrl( file )\n\t},\n\n\tstringToFile: (str, type) => {\n\t\treturn Converter.blobToFile( new Blob( [str], {type} ) )\n\t},\n\n\tblobToFile: ( blob, filename = '' ) => {\n\t\treturn new File([blob], safeFilename( blob, filename ), { type: blob.type } );\n\t},\n\tblobUrlToMime: async blobUrl =>{\n\t\tconst blob = await Converter.blobUrlToBlob(blobUrl)\n\t\treturn blob.type\n\t},\n\tblobUrlToType: async blobUrl => {\n\t\tconst blob = await Converter.blobUrlToBlob(blobUrl)\n\t\treturn blob.type.substr(0,blob.type.indexOf('/'))\n\t},\n\tblobUrlToBlob: async ( blobUrl, filename = '' ) => {\n\t\tconst blob = await fetch( blobUrl ).then( r => r.blob() );\n\t\treturn blob\n\t},\n\tblobUrlToFile: async ( blobUrl, filename = '' ) => {\n\t\tconst blob = await Converter.blobUrlToBlob(blobUrl)\n\t\treturn Converter.blobToFile( blob, filename )\n\t},\n\tblobUrlToDataUrl: async blobUrl => {\n\t\tconst blob = await fetch(blobUrl).then( r => r.blob() );\n\t\tconst dataurl = await Converter.fileToDataUrl(blob)\n\t\treturn dataurl\n\t},\n\n\n\tdataUrlToMime: dataurl => dataurl.match('data:([^;]+);')[1],\n\n\tdataUrlToType: dataurl => dataurl.match('data:([^\\/]+)\\/')[1],\n\n\tdataUrlToBlob: ( dataurl ) => {\n\t\tlet arr = dataurl.split(','),\n\t\t\ttype = arr[0].match(/:(.*?);/)[1],\n\t\t\tbstr = atob(arr[1]),\n\t\t\tn = bstr.length,\n\t\t\tu8arr = new Uint8Array(n);\n\n\t\twhile(n--){\n\t\t\tu8arr[n] = bstr.charCodeAt(n);\n\t\t}\n\t\treturn new Blob( [u8arr], { type: type } )\n\t},\n\n\tdataUrlToFile: ( dataurl, filename = '' ) => Converter.blobToFile( Converter.dataUrlToBlob(dataurl), filename ),\n\n\tdataUrlToBlobUrl: dataurl => Converter.fileToBlobUrl( Converter.dataUrlToBlob( dataurl ) ),\n\n\tfileToBlobUrl: file => URL.createObjectURL(file),\n\n\tfileToDataUrl: file => new Promise( ( resolve, reject ) => {\n\t\tconst fr = new FileReader()\n\t\tfr.addEventListener('load', () => resolve( fr.result )  )\n\t\tfr.readAsDataURL( file )\n\t}),\n}\n\nmodule.exports = Converter\n","import mime from 'mime'\n\n/**\n *\tGenerate a filename\n */\nconst generateFilename = suffix => {\n\n\tconst zerofill = (n,len = 2) => {\n\t\treturn ('00' + n.toString()).substr(-len)\n\t}\n\n\tlet name = thepaste.options.default_filename\n\n\tconst now = new Date(),\n\t\tpostname = document.querySelector('#post [name=\"post_title\"]#title')?.value\n\t\t\t|| document.querySelector('.wp-block-post-title')?.textContent\n\t\t\t|| document.querySelector('h1')?.textContent,\n\t\treplace_values = thepaste.options.filename_values,\n\t\t// username = document.querySelector('.display-name')?.textContent,\n\t\tmap = [\n\t\t\t{ s: '%Y', r: now.getFullYear() },\n\t\t\t{ s: '%y', r: now.getFullYear() % 100 },\n\t\t\t{ s: '%m', r: zerofill(now.getMonth() + 1) },\n\t\t\t{ s: '%d', r: zerofill(now.getDate()) },\n\t\t\t{ s: '%e', r: now.getDate() },\n\t\t\t{ s: '%H', r: zerofill(now.getHours()) },\n\t\t\t{ s: '%I', r: zerofill(now.getHours() % 12 ) },\n\t\t\t{ s: '%M', r: zerofill(now.getMinutes()) },\n\t\t\t{ s: '%S', r: zerofill(now.getSeconds()) },\n\t\t\t{ s: '%s', r: Math.floor( now.getTime() / 1000 ) },\n\t\t\t{ s: '%x', r: now.toLocaleDateString() },\n\t\t\t{ s: '%X', r: now.toLocaleTimeString() }\n\t\t];\n\tif ( 'undefined' !== typeof postname ) {\n\t\tmap.push( { s: '<postname>', r: postname } );\n\t} else {\n\t\tmap.push( { s: '<postname>', r: '' } );\n\t}\n\tObject.keys( replace_values ).forEach( k => {\n\t\tif ( !! replace_values[k] ) {\n\t\t\tmap.push( { s: `<${k}>`, r: replace_values[k] } );\n\t\t} else {\n\t\t\tmap.push( { s: `<${k}>`, r: '' } );\n\t\t}\n\t})\n\tmap.forEach(function(el){\n\t\tname = name.replace( el.s, el.r )\n\t})\n\tif ( 'string' === typeof suffix) {\n\t\tname += '.' + suffix;\n\t}\n\treturn name;\n}\nconst safeFilename = ( file, filename = '' ) => {\n\tlet type = file.type\n\n\tconst suffix = mime.extension(type)\n\tfilename = filename.replace(/[^\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\p{Zs}]/ug,'-').trim()\n\tif ( ! filename ) {\n\t\tfilename = generateFilename( suffix )\n\t}\n\tif ( suffix !== filename.split('.').pop() ) {\n\t\tfilename += `.${suffix}`\n\t}\n\treturn filename\n}\n\nmodule.exports = { generateFilename, safeFilename }\n","const exts  = Object.keys( thepaste.options.mime_types )\nconst types = Object.values( thepaste.options.mime_types )\n\n// windows\nexts.push('zip')\ntypes.push('application/x-zip-compressed')\n\nmodule.exports = {\n\textension: type => {\n\t\tconst idx = types.indexOf( type )\n\t\treturn -1 !== idx ? exts[idx] : false\n\t},\n\ttype: ext => {\n\t\tconst idx = exts.indexOf( ext )\n\t\treturn -1 !== idx ? types[idx] : false\n\t}\n}\n","import $ from 'jquery'\n\nclass Notices {\n\n\tstatic #dismissButton = `<button type=\"button\" class=\"notice-dismiss\"><span class=\"screen-reader-text\">${wp.i18n.__( 'Dismiss this notice.' )}</span></button>`;\n\n\tstatic success( message, dismissible = false ) {\n\t\tNotices.#addNotice( 'updated', message, dismissible )\n\t}\n\n\tstatic notify( message, dismissible = false ) {\n\t\tNotices.#addNotice( '', message, dismissible )\n\t}\n\n\tstatic warn( message, dismissible = false ) {\n\t\tNotices.#addNotice( 'notice-warning', message, dismissible )\n\t}\n\n\tstatic error( message, dismissible = false ) {\n\t\tNotices.#addNotice( 'error', message, dismissible )\n\t}\n\n\tstatic #addNotice( type, message, dismissible = false ) {\n\t\tconst classes = `${type} notice ${dismissible?'is-dismissible':''}`.trim()\n\t\tconst html = `<div class=\"${classes}\"><p>${message}</p></div>`;\n\t\tconst $headerEnd = $( '.wp-header-end' ).first();\n\t\t$(html).insertAfter( $headerEnd );\n\t\t$(document).trigger( 'wp-updates-notice-added' );\n\t}\n}\n\nmodule.exports = Notices\n","import mime from 'mime'\nimport Converter from 'converter'\nimport Notices from 'notices'\nimport { rml } from 'compat'\n\nconst allowedExtensions   = _wpPluploadSettings.defaults.filters.mime_types[0].extensions.split(',')\nconst maxFileSize         = Math.min( 1024*1024*200, parseInt(_wpPluploadSettings.defaults.filters.max_file_size) ) // 100MB or uplaod max filesize\n\nconst sizeAllowed = file => {\n\treturn !!file && file.size <= maxFileSize\n}\nconst extensionAllowed = file => {\n\treturn !!file && allowedExtensions.includes( mime.extension( file.type ) )\n}\n\n\nclass WPUploader {\n\tstatic #workflow\n\tonUploaded = () => {}\n\tonProgress = () => {}\n\tonError    = () => {}\n\t#file\n\n\t#progressHandler = (up,args) => {\n\t\tif ( this.#isitMe(args) ) {\n\t\t\tthis.onProgress( args.percent )\n\t\t}\n\t}\n\t#uploadedHandler = ( up, args, response ) => {\n\t\tif ( this.#isitMe(args) ) {\n\t\t\tthis.onUploaded( args )\n\t\t\tthis.#removeListeners()\n\t\t}\n\t}\n\t#errorHandler = ( up, args, c = 0 ) => {\n\t\tif ( this.#isitMe(args) ) {\n\t\t\tthis.onError(args)\n\t\t}\n\t}\n\n\t#isitMe(args) {\n\t\treturn this.#file.name === args.name && this.#file.size === args.size\n\t}\n\n\tstatic get ready() {\n\t\treturn !! WPUploader.workflow.uploader.uploader && !! WPUploader.workflow.uploader.uploader.ready\n\t}\n\n\tstatic get workflow() {\n\t\tif ( ! WPUploader.#workflow ) {\n\t\t\tWPUploader.#workflow = wp.media.editor.open( window.wpActiveEditor, {\n\t\t\t\tframe:    'post',\n\t\t\t\tstate:    'insert',\n\t\t\t\ttitle:    thepaste.l10n.copy_paste,\n\t\t\t\tmultiple: false\n\t\t\t})\n\t\t}\n\t\treturn WPUploader.#workflow\n\t}\n\n\tstatic get uploader() {\n\t\treturn WPUploader.workflow.uploader.uploader.uploader\n\t}\n\n\tstatic get(file) {\n\t\treturn new WPUploader(file)\n\t}\n\n\tconstructor(file) {\n\n\t\t// sanitize file\n\t\tif ( ! file.name ) {\n\t\t\tfile.name = Uploader.getFilename( mime.extension(file.type) )\n\t\t}\n\n\t\tthis.#file = rml.file(file)\n\n\t}\n\n\tdestructor() {\n\t\tWPUploader.workflow.close()\n\t}\n\n\tupload() {\n\t\tif ( WPUploader.ready ) {\n\t\t\tthis.#upload()\n\t\t} else {\n\t\t\tWPUploader.workflow.once( 'uploader:ready', () => {\n\t\t\t\tthis.#upload()\n\t\t\t} );\n\t\t}\n\t}\n\t#upload() {\n\t\tthis.#addListeners()\n\t\tWPUploader.uploader.addFile( this.#file );\n\t\tWPUploader.workflow.close()\n\t}\n\n\t#addListeners() {\n\t\tWPUploader.uploader.bind( 'UploadProgress', this.#progressHandler, this );\n\t\tWPUploader.uploader.bind( 'FileUploaded', this.#uploadedHandler, this );\n\t\tWPUploader.uploader.bind( 'Error', this.#errorHandler, this );\n\t}\n\n\t#removeListeners() {\n\t\tWPUploader.uploader.unbind( 'UploadProgress', this.#progressHandler, this );\n\t\tWPUploader.uploader.unbind( 'FileUploaded', this.#uploadedHandler, this );\n\t\tWPUploader.uploader.unbind( 'Error', this.#errorHandler, this );\n\t}\n\n\tdump() {\n\t\tconsole.log(arguments)\n\t}\n}\n\n\nconst Uploader = {\n\tinlineUpload: async el => {\n\n\t\tconst file = await Converter.elementToFile( el )\n\t\tconst uploader = WPUploader.get(file)\n\t\tconst progress = document.createElement('progress')\n\n\t\tprogress.classList.add('the-paste-progress')\n\n\t\tif ( ! sizeAllowed(file) ) {\n\t\t\tthrow new ErrorEvent('the-paste-upload', { message: `File size exceeds ${maxFileSize} byte`,  })\n\t\t}\n\n\t\tif ( ! extensionAllowed(file) ) {\n\t\t\tthrow new ErrorEvent('the-paste-upload', { message: `Type ${file.type} not allowed`,  })\n\t\t}\n\t\t// dom\n\t\tprogress.max = 100\n\t\tel.parentNode?.insertBefore(progress,el)\n\t\tel.remove()\n\t\t// upload process\n\t\tuploader.onProgress = percent => {\n\t\t\tprogress.value = percent\n\t\t}\n\t\tuploader.onError = error => {\n\t\t\tconsole.error(error)\n\t\t\tNotices.error( `<strong>${thepaste.l10n.the_paste}:</strong> ${error.message} File: <em>${file.name}</em>`, true )\n\t\t\tprogress.remove()\n\t\t}\n\t\tuploader.onUploaded = args => {\n\n\t\t\tconst newElement = document.createElement('p')\n\t\t\tconst attachment = args.attachment.attributes\n\t\t\tconst link = getUserSetting( 'urlbutton', 'none' )\n\n\t\t\tif ( 'image' === attachment.type ) {\n\t\t\t\tnewElement.innerHTML = wp.media.string.image( {\n\t\t\t\t\tlink,\n\t\t\t\t\talign: getUserSetting( 'align', 'none' ),\n\t\t\t\t\tsize:  getUserSetting( 'imgsize', 'medium' ),\n\t\t\t\t}, attachment )\n\n\t\t\t} else if ( 'video' === attachment.type ) {\n\t\t\t\tnewElement.innerHTML = wp.media.string.video( {\n\t\t\t\t\tlink: link !== 'none'\n\t\t\t\t\t\t? link\n\t\t\t\t\t\t: 'embed'\n\t\t\t\t}, attachment )\n\n\t\t\t} else if ( 'audio' === attachment.type ) {\n\t\t\t\tnewElement.innerHTML = wp.media.string.audio( {\n\t\t\t\t\tlink: link !== 'none'\n\t\t\t\t\t\t? link\n\t\t\t\t\t\t: 'embed'\n\t\t\t\t}, attachment )\n\n\t\t\t} else {\n\t\t\t\tnewElement.innerHTML = wp.media.string.link( {\n\t\t\t\t\tlink: link !== 'none'\n\t\t\t\t\t\t? link\n\t\t\t\t\t\t: 'file'\n\t\t\t\t}, attachment )\n\t\t\t}\n\t\t\tif ( tinymce.activeEditor ) {\n\t\t\t\ttinymce.activeEditor.execCommand( 'mceInsertContent', false, newElement.innerHTML );\n\t\t\t\tprogress.remove()\n\t\t\t} else {\n\t\t\t\tprogress.replaceWith( newElement.childNodes[0] )\n\t\t\t}\n\t\t}\n\t\tuploader.upload()\n\t},\n\t/**\n\t *\tGenerate a filename\n\t */\n\tgetFilename: suffix => {\n\n\t\tconst zerofill = (n,len = 2) => {\n\t\t\treturn ('00' + n.toString()).substr(-len)\n\t\t}\n\n\t\tlet name = thepaste.options.default_filename\n\n\t\tconst now = new Date(),\n\t\t\tpostname = document.querySelector('#post [name=\"post_title\"]#title').value,\n\t\t\tusername = document.querySelector('.display-name').textContent,\n\t\t\tmap = [\n\t\t\t\t{ s: '%Y', r: now.getFullYear() },\n\t\t\t\t{ s: '%y', r: now.getFullYear() % 100 },\n\t\t\t\t{ s: '%m', r: zerofill(now.getMonth() + 1) },\n\t\t\t\t{ s: '%d', r: zerofill(now.getDate()) },\n\t\t\t\t{ s: '%e', r: now.getDate() },\n\t\t\t\t{ s: '%H', r: zerofill(now.getHours()) },\n\t\t\t\t{ s: '%I', r: zerofill(now.getHours() % 12 ) },\n\t\t\t\t{ s: '%M', r: zerofill(now.getMinutes()) },\n\t\t\t\t{ s: '%S', r: zerofill(now.getSeconds()) },\n\t\t\t\t{ s: '%s', r: Math.floor( now.getTime() / 1000 ) }\n\t\t\t];\n\t\tif ( 'undefined' !== typeof postname ) {\n\t\t\tmap.push( { s: '<postname>', r: postname } );\n\t\t} else {\n\t\t\tmap.push( { s: '<postname>', r: '' } );\n\t\t}\n\t\tmap.forEach( function(el) {\n\t\t\tname = name.replace( el.s, el.r )\n\t\t})\n\t\tif ( 'string' === typeof suffix) {\n\t\t\tname += '.' + suffix;\n\t\t}\n\t\treturn name;\n\t}\n}\nmodule.exports = Uploader\n"]}