{"version":3,"sources":["admin/mce/node_modules/browser-pack/_prelude.js","admin/mce/src/js/admin/mce/the-paste-plugin/index.js","admin/mce/src/js/lib/compat.js","admin/mce/src/js/lib/converter.js","admin/mce/src/js/lib/filename.js","admin/mce/src/js/lib/mime.js","admin/mce/src/js/lib/notices.js","admin/mce/src/js/lib/uploader.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","_interopRequireDefault","window","global","_converter","_notices","_uploader","__esModule","default","_classPrivateFieldInitSpec","has","TypeError","_checkPrivateRedeclaration","set","_classPrivateFieldSet","s","_assertClassBrand","_classPrivateFieldGet","get","arguments","_files","WeakMap","_isAsync","PasteOperation","init","event","preferFiles","undefined","_instance","_","destroy","setEnabled","enabled","_isEnabled","isAsync","this","hasPastedFiles","files","pastedContent","map","file","idx","src","URL","createObjectURL","concat","type","name","join","constructor","_this$clipboardData$f","clipboardData","body","target","closest","Array","from","items","filter","item","kind","loc","document","location","html","clipboardItemsToHtml","div","createElement","placeholder","querySelector","images","innerHTML","push","querySelectorAll","nodes","childNodes","node","Node","ELEMENT_NODE","TEXT_NODE","includes","nodeType","before","remove","protocol","hostname","urlToBlobUrl","dispatchEvent","Event","dumpClipboardData","prefix","forEach","el","console","log","getAsString","getAsFile","tinymce","PluginManager","add","editor","pasteOnOffBtn","toolbar","addButton","icon","tooltip","thepaste","l10n","paste_files","onPostRender","onClick","active","fetch","options","enable_ajax_url","once","wp","_createToolbar","upload_image","onclick","inlineUpload","selection","getNode","on","uploadBtn","element","nodeName","isPlaceholder","$el","find","img","sub","substring","canUpload","hide","show","crawlPastedImages","dom","doc","_ref","state","disabled","addEventListener","async","classList","catch","err","error","message","matches","pasteOperation","debugMode","editorPreProcess","content","editorPostProcess","setTimeout","off","alt","supports","svg","_wpPluploadSettings","defaults","filters","mime_types","extensions","split","webp","toDataURL","indexOf","rml","getSource","_compat","_filename","Converter","clipboardItemsToFiles","clipboardItems","Promise","resolve","reject","promises","handler","_textPlain$textHtml","str","itemToString","toLowerCase","DOMParser","parseFromString","stringToFile","imgs","elementToFile","allSettled","then","result","promise","value","fl","size","gdocsItemToSources","Object","values","JSON","parse","data","image_urls","gdocsItemToFiles","sources","blobUrlToFile","urlToFile","url","filename","schema","substr","dataUrlToFile","urlToMime","mime","dataUrlToMime","blobUrlToMime","urlToType","fileToBlobUrl","blobToFile","Blob","blob","File","safeFilename","blobUrlToBlob","blobUrl","blobUrlToType","blobUrlToDataUrl","fileToDataUrl","dataurl","match","dataUrlToType","dataUrlToBlob","arr","bstr","atob","u8arr","Uint8Array","charCodeAt","dataUrlToBlobUrl","fr","FileReader","readAsDataURL","_mime","generateFilename","suffix","_document$querySelect","_document$querySelect2","_document$querySelect3","zerofill","len","toString","default_filename","now","Date","postname","textContent","replace_values","filename_values","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getTime","toLocaleDateString","toLocaleTimeString","keys","k","replace","extension","trim","pop","exts","types","ext","_jquery","Notices","success","dismissible","_addNotice","notify","warn","classes","$headerEnd","first","insertAfter","trigger","i18n","__","_WPUploader","_defineProperty","Symbol","toPrimitive","String","Number","_toPrimitive","_toPropertyKey","defineProperty","enumerable","configurable","writable","allowedExtensions","maxFileSize","min","parseInt","max_file_size","_file","_progressHandler","_uploadedHandler","_errorHandler","_WPUploader_brand","WeakSet","WPUploader","ready","workflow","uploader","_workflow","media","open","wpActiveEditor","frame","title","copy_paste","multiple","_this","up","args","_isitMe","onProgress","percent","response","onUploaded","_removeListeners","onError","Uploader","getFilename","destructor","close","upload","_upload","dump","_addListeners","addFile","bind","unbind","_el$parentNode","progress","sizeAllowed","ErrorEvent","extensionAllowed","max","parentNode","insertBefore","the_paste","newElement","attachment","attributes","link","getUserSetting","string","image","align","video","audio","replaceWith"],"mappings":"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","file":"the-paste-plugin.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import $ from 'jquery'\nimport Converter from 'converter'\nimport Notices from 'notices'\nimport Uploader from 'uploader'\n\nclass PasteOperation {\n\n\tstatic #instance = null\n\tstatic #isEnabled = true\n\n\t#files = []\n\t#isAsync = false\n\n\tstatic init( event, preferFiles = true ) {\n\t\tPasteOperation.#instance = new PasteOperation( event, preferFiles )\n\t\treturn PasteOperation.get();\n\t}\n\n\tstatic get() {\n\t\treturn PasteOperation.#instance\n\t}\n\n\tstatic destroy() {\n\t\tPasteOperation.#instance = null\n\t}\n\n\tstatic setEnabled(enabled) {\n\t\tPasteOperation.#isEnabled = enabled\n\t}\n\n\tget isAsync() {\n\t\treturn this.#isAsync\n\t}\n\n\tget hasPastedFiles() {\n\t\treturn this.files.length > 0\n\t}\n\n\tget pastedContent() {\n\t\treturn this.isAsync\n\t\t\t? '<p id=\"the-pasted-async\"></p>' // paste html\n\t\t\t: this.files.map( (file,idx) => {\n\t\t\t\t\tconst src = URL.createObjectURL(file)\n\t\t\t\t\treturn `<p><img id=\"the-pasted-${file.type}-${idx}\" src=\"${src}\" alt=\"${file.name}\" /></p>`\n\t\t\t\t} )\n\t\t\t\t.join('')\n\t}\n\n\tget files() {\n\t\treturn this.#files\n\t}\n\n\tconstructor( event, preferFiles ) {\n\t\tthis.clipboardData = event.clipboardData\n\t\tthis.body = event.target.closest('body')\n\n\t\tif ( PasteOperation.#isEnabled ) {\n\t\t\tthis.#files = Array.from( this.clipboardData.files??[] )\n\n\t\t\tif ( ! this.files.length || ! preferFiles ) {\n\t\t\t\tthis.#isAsync = Array.from( this.clipboardData.items ).filter( item => item.kind === 'string' && item.type === 'text/html' ).length > 0\n\t\t\t}\n\t\t}\n\n\t\t// no files\n\t\tif ( ! this.isAsync && ! this.files.length ) {\n\t\t\treturn\n\t\t}\n\n\t\tif ( this.isAsync ) {\n\t\t\t// google docs clipboard items present\n\t\t\t(async () => {\n\t\t\t\tlet i, u\n\t\t\t\tconst loc = new URL( document.location )\n\t\t\t\tconst html = await Converter.clipboardItemsToHtml( event.clipboardData.items )\n\t\t\t\tconst div = document.createElement('div')\n\t\t\t\tconst placeholder = this.body.querySelector('#the-pasted-async')\n\t\t\t\tconst images = []\n\n\t\t\t\tdiv.innerHTML = html\n\t\t\t\timages.push( ...Array.from(div.querySelectorAll('img')) )\n\t\t\t\tconst nodes = Array.from(div.childNodes).filter( node => [ Node.ELEMENT_NODE , Node.TEXT_NODE ].includes(node.nodeType))\n\n\t\t\t\tfor ( i=0;i<nodes.length;i++ ) {\n\t\t\t\t\tplaceholder?.before( nodes[i] )\n\t\t\t\t}\n\t\t\t\t// .forEach( node => placeholder?.before( node ) )\n\t\t\t\tplaceholder?.remove()\n\n\t\t\t\tif ( images.length ) {\n\t\t\t\t\tfor ( i=0; i < images.length; i++ ) {\n\t\t\t\t\t\tu = new URL(images[i].src)\n\t\t\t\t\t\tif ( ! ['http:','https:'].includes(u.protocol) || loc.hostname !== u.hostname ) {\n\t\t\t\t\t\t\timages[i].src = await Converter.urlToBlobUrl(images[i].src)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.body.dispatchEvent(new Event('FilesPasted'))\n\t\t\t\t}\n\t\t\t})()\n\t\t} else if ( this.body.querySelector('[src^=\"data:\"]:not(.--paste-process)') ) {\n\t\t\tthis.body.dispatchEvent(new Event('FilesPasted'))\n\t\t}\n\t}\n\n\tdumpClipboardData() {\n\t\tconst prefix = '[the paste]'\n\t\tArray.from(this.clipboardData.files).forEach( el => console.log(prefix,el) )\n\t\tArray.from(this.clipboardData.items).forEach( el => {\n\t\t\tconsole.log(prefix,el,el.kind,el.type)\n\t\t\tif ( 'string' === el.kind ) {\n\t\t\t\tel.getAsString(s=>console.log(s))\n\t\t\t} else {\n\t\t\t\tconsole.log(prefix,el.getAsFile())\n\t\t\t}\n\t\t} )\n\t\treturn this\n\t}\n}\n\n\ntinymce.PluginManager.add( 'the_paste', function(editor) {\n\n\tlet pasteOnOffBtn,\n\t\ttoolbar,\n\t\tisPlaintextState = false\n\n\t// enable / disable autoupload button\n\teditor.addButton( 'thepaste_onoff', {\n\t\ticon: 'thepaste_onoff',\n\t\ttooltip: thepaste.l10n.paste_files,\n\t\tonPostRender: function() {\n\t\t\tpasteOnOffBtn = this;\n\t\t},\n\t\tonClick: function() {\n\t\t\tthis.active( ! this.active() )\n\t\t\tfetch(`${thepaste.options.editor.enable_ajax_url}&enabled=${this.active()?1:0}`)\n\t\t},\n\t\tactive: thepaste.options.editor.enabled\n\t});\n\n\n\t// init media toolbar flyout\n\teditor.once( 'preinit', function() {\n\t\tif ( editor.wp && editor.wp._createToolbar ) {\n\n\t\t\ttoolbar = editor.wp._createToolbar( [\n\t\t\t\t'wp_img_alignleft',\n\t\t\t\t'wp_img_aligncenter',\n\t\t\t\t'wp_img_alignright',\n\t\t\t\t'wp_img_alignnone',\n\t\t\t\t'wp_img_thepaste_upload',\n\t\t\t\t'wp_img_edit',\n\t\t\t\t'wp_img_remove',\n\t\t\t] );\n\t\t}\n\t} );\n\n\t// upload button in media toolbar flyout\n\teditor.addButton('wp_img_thepaste_upload', {\n\t\ticon: 'dashicon dashicons dashicons-upload thepaste-upload',\n\t\ttooltip: thepaste.l10n.upload_image,\n\t\tonclick: function() {\n\t\t\t// wrap img, upload\n\t\t\tUploader.inlineUpload( editor.selection.getNode() )\n\t\t}\n\t});\n\n\t// setup media toolbar flyout on node change\n\teditor.on( 'wptoolbar', function( event ) {\n\t\tvar uploadBtn;\n\t\tif ( event.element.nodeName === 'IMG' && ! editor.wp.isPlaceholder( event.element ) ) {\n\t\t\tevent.toolbar = toolbar;\n\n\t\t\tuploadBtn = toolbar.$el.find('.thepaste-upload').closest('.mce-btn');\n\n\t\t\tif ( canUpload( event.element ) ) {\n\t\t\t\tuploadBtn.show();\n\t\t\t} else {\n\t\t\t\tuploadBtn.hide();\n\t\t\t}\n\t\t}\n\t} );\n\n\n\t// true if data source or blob image\n\tfunction canUpload( img ) {\n\t\tconst sub = img.src.substring(0,5);\n\t\treturn sub === 'blob:' || sub === 'data:';\n\t}\n\n\tconst crawlPastedImages = () => {\n\t\treturn Array.from( editor.dom.doc.body.querySelectorAll('[src^=\"blob:\"]:not(.--paste-process),[src^=\"data:\"]:not(.--paste-process)') )\n\t}\n\n\teditor\n\t\t.on( 'PastePlainTextToggle', ( { state } ) => {\n\t\t\tPasteOperation.setEnabled( ! state )\n\t\t\tpasteOnOffBtn.disabled( state )\n\t\t})\n\t\t.on( 'init', () => {\n\t\t\teditor.dom.doc.body.addEventListener('FilesPasted', async e => {\n\n\t\t\t\tlet i, el\n\t\t\t\tconst images = crawlPastedImages()\n\t\t\t\tfor (i=0; i<images.length;i++) {\n\t\t\t\t\tel = images[i]\n\t\t\t\t\tel.classList.add('--paste-process')\n\t\t\t\t\tUploader.inlineUpload( el ).catch( err => Notices.error( err.message, true ) || el.remove() )\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\t.on( 'Paste', e => {\n\t\t\tif ( document.body.matches('.modal-open') ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst preferFiles = !pasteOnOffBtn || pasteOnOffBtn.active()\n\t\t\tconst pasteOperation = PasteOperation.init( e, preferFiles ) //\n\t\t\tif ( thepaste.options.editor.debugMode ) {\n\t\t\t\tpasteOperation.dumpClipboardData()\n\t\t\t}\n\t\t\t// pasteOperation.dumpClipboardData()\n\t\t\t// nothing to paste\n\t\t\tif ( ! pasteOperation.isAsync && ! pasteOperation.files.length ) {\n\t\t\t\tPasteOperation.destroy()\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst editorPreProcess = e => {\n\t\t\t\t/*\n\t\t\t\tFF: Not Fired if clipboard contains file from FS\n\t\t\t\t*/\n\t\t\t\tlet content\n\t\t\t\t// get html from pasteOperation\n\t\t\t\tif ( content = pasteOperation.pastedContent ) {\n\t\t\t\t\te.content = content\n\t\t\t\t}\n\n\t\t\t\tPasteOperation.destroy()\n\t\t\t}\n\t\t\tconst editorPostProcess = e => {\n\t\t\t\tsetTimeout( () => editor.dom.doc.body.dispatchEvent(new Event('FilesPasted')))\n\t\t\t\teditor.off( 'PastePreProcess', editorPreProcess )\n\t\t\t\teditor.off( 'PastePostProcess', editorPostProcess )\n\t\t\t}\n\n\t\t\teditor.once( 'input', async ie => {\n\t\t\t\t/*\n\t\t\t\tFired in FF if clipboard contains file from FS\n\t\t\t\t*/\n\t\t\t\tconst images = crawlPastedImages()\n\t\t\t\tlet idx, img\n\t\t\t\tif ( ! images.length ) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tfor ( idx=0; idx < images.length; idx++ ) {\n\t\t\t\t\timg = images[idx]\n\t\t\t\t\tif ( !! pasteOperation.files[idx] ) {\n\t\t\t\t\t\timg.alt = pasteOperation.files[idx].name\n\t\t\t\t\t\timg.src = URL.createObjectURL(pasteOperation.files[idx])\n\t\t\t\t\t\t// img.src = await Converter.dataUrlToBlobUrl(img.src)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsetTimeout( () => editor.dom.doc.body.dispatchEvent(new Event('FilesPasted')))\n\n\t\t\t\tif ( images.length === pasteOperation.files.length ) {\n\t\t\t\t\t// images already processed\n\t\t\t\t\teditor.off( 'PastePreProcess', editorPreProcess )\n\t\t\t\t\teditor.off( 'PastePostProcess', editorPostProcess )\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on( 'PastePreProcess', editorPreProcess )\n\t\t\t.on( 'PastePostProcess', editorPostProcess )\n\t\t});\n} );\n","// Compatibility with [Real Media Library](https://wordpress.org/plugins/real-media-library-lite/)\n// @see https://github.com/mcguffin/the-paste/issues/47\n\nclass Supports {\n\tget svg() {\n\t\treturn _wpPluploadSettings.defaults.filters.mime_types[0].extensions.split(',').includes('svg')\n\t}\n\tget webp() {\n\t\treturn document.createElement('canvas').toDataURL('image/webp').indexOf('data:image/webp') == 0\n\t}\n}\n\nconst rml = {\n\tfile: file => {\n\t\tif ( ! file.getSource ) {\n\t\t\t// return native file object\n\t\t\t// mimic mOxie.Blob.getSource()\n\t\t\tfile.getSource = () => {\n\t\t\t\treturn file\n\t\t\t}\n\t\t}\n\t\treturn file\n\t}\n}\n\nconst supports = new Supports()\n\nmodule.exports = { rml, supports }\n","import { supports } from 'compat'\nimport { safeFilename } from 'filename'\n\n\nconst itemHandler = type => {\n\treturn {\n\t\t'text/plain': async item => {\n\t\t\tif ( supports.svg ) {\n\t\t\t\tconst str = await Converter.itemToString( item )\n\t\t\t\tif ( str.toLowerCase().indexOf('<svg') >= 0 ) {\n\t\t\t\t\tconst domParser = new DOMParser()\n\t\t\t\t\tif ( domParser.parseFromString(str,'image/svg+xml').querySelector('svg') ) {\n\t\t\t\t\t\treturn [ Converter.stringToFile( str, 'image/svg+xml' ) ]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn []\n\t\t},\n\t\t'text/html': async item => {\n\t\t\tconst loc = new URL( document.location )\n\t\t\tconst div = document.createElement('div')\n\t\t\tdiv.innerHTML = await Converter.itemToString( item )\n\n\t\t\tconst imgs = Array.from( div.querySelectorAll('img') )\n\t\t\t\t.filter( img => {\n\t\t\t\t\t// remove images from same domain\n\t\t\t\t\tconst u = new URL(img.src)\n\t\t\t\t\treturn ! ['http:','https:'].includes(u.protocol) || loc.hostname !== u.hostname\n\t\t\t\t} )\n\t\t\t\t.map( img => Converter.elementToFile(img) )\n\n\t\t\treturn new Promise( (resolve,reject) => {\n\t\t\t\tPromise.allSettled( imgs ).then( result => resolve( Array.from(result).map( promise => promise.value )) )\n\t\t\t})\n\t\t},\n\t\t// 'application/x-vnd.google-docs-image-clip+wrapped': async item => await Converter.gdocsItemToFiles( item ), // <== dont need this\n\t}[type]??(()=>new Promise((resolve,reject)=>resolve([])))\n}\n\nconst Converter = {\n\tclipboardItemsToFiles: clipboardItems => {\n\t\tconst files = []\n\t\treturn new Promise((resolve,reject) => {\n\t\t\tconst promises = Array.from(clipboardItems).map( item => {\n\t\t\t\tif ( 'string' === item.kind ) {\n\t\t\t\t\tconst handler = itemHandler(item.type)\n\t\t\t\t\treturn handler( item )\n\t\t\t\t\t\t.then( f => {\n\t\t\t\t\t\t\tfiles.push( ...f.filter( fl => fl.size > 0 ) )\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.catch( err => console.error(err) )\n\t\t\t\t}\n\t\t\t})\n\t\t\tPromise.allSettled(promises).then( () => resolve(files))\n\t\t})\n\t},\n\tclipboardItemsToHtml:  async clipboardItems => {\n\t\tlet i, item\n\t\tfor ( i=0; i < clipboardItems.length; i++ ) {\n\t\t\titem = clipboardItems[i]\n\t\t\tif ( 'string' === item.kind && 'text/html' === item.type ) {\n\t\t\t\treturn await Converter.itemToString( item )\n\t\t\t}\n\t\t}\n\t\treturn ''\n\t},\n\tgdocsItemToSources: async item => new Promise( (resolve, reject) => {\n\t\titem.getAsString( async str => {\n\t\t\tconst src = Object.values(JSON.parse(JSON.parse( str ).data ).image_urls )\n\t\t\tresolve(src)\n\t\t} )\n\t}),\n\tgdocsItemToFiles: async item => {\n\t\tlet i\n\t\tconst sources = await Converter.gdocsItemToSources(item)\n\t\tconst files = []\n\t\tfor ( i=0;i<sources.length; i++ ) {\n\t\t\tfiles.push( await Converter.blobUrlToFile(sources[i]) )\n\t\t}\n\t\treturn files\n\t},\n\titemToString: async item => new Promise( (resolve, reject) => {\n\t\titem.getAsString( str => resolve(str) )\n\t}),\n\n\telementToFile: async el => {\n\t\tconst file = await Converter.urlToFile(el.src,el.alt)\n\t\treturn file\n\t},\n\n\turlToFile: async ( url, filename = '') => {\n\t\tlet file\n\t\tconst schema = url.substr( 0, url.indexOf(':') )\n\t\tif ( 'data' === schema ) {\n\t\t\tfile = Converter.dataUrlToFile( url, filename )\n\t\t} else if ( ['blob','http','https'].includes( schema ) ) {\n\t\t\tfile = await Converter.blobUrlToFile( url, filename )\n\t\t}\n\t\treturn file\n\t},\n\turlToMime: async url => {\n\t\tconst schema = url.substr( 0, url.indexOf(':') )\n\t\tlet mime\n\t\tif ( 'data' === schema ) {\n\t\t\tmime = Converter.dataUrlToMime( url )\n\t\t} else if ( ['blob','http','https'].includes( schema ) ) {\n\t\t\tmime = await Converter.blobUrlToMime( url )\n\t\t}\n\t\treturn mime\n\t},\n\turlToType: async url => {\n\t\tconst mime = await Converter.urlToMime(url)\n\t\treturn mime.substr( 0, mime.indexOf('/'))\n\t},\n\turlToBlobUrl: async (url) => {\n\t\tconst file = await Converter.blobUrlToFile( url )\n\t\treturn Converter.fileToBlobUrl( file )\n\t},\n\n\tstringToFile: (str, type) => {\n\t\treturn Converter.blobToFile( new Blob( [str], {type} ) )\n\t},\n\n\tblobToFile: ( blob, filename = '' ) => {\n\t\treturn new File([blob], safeFilename( blob, filename ), { type: blob.type } );\n\t},\n\tblobUrlToMime: async blobUrl =>{\n\t\tconst blob = await Converter.blobUrlToBlob(blobUrl)\n\t\treturn blob.type\n\t},\n\tblobUrlToType: async blobUrl => {\n\t\tconst blob = await Converter.blobUrlToBlob(blobUrl)\n\t\treturn blob.type.substr(0,blob.type.indexOf('/'))\n\t},\n\tblobUrlToBlob: async ( blobUrl, filename = '' ) => {\n\t\tconst blob = await fetch( blobUrl ).then( r => r.blob() );\n\t\treturn blob\n\t},\n\tblobUrlToFile: async ( blobUrl, filename = '' ) => {\n\t\tconst blob = await Converter.blobUrlToBlob(blobUrl)\n\t\treturn Converter.blobToFile( blob, filename )\n\t},\n\tblobUrlToDataUrl: async blobUrl => {\n\t\tconst blob = await fetch(blobUrl).then( r => r.blob() );\n\t\tconst dataurl = await Converter.fileToDataUrl(blob)\n\t\treturn dataurl\n\t},\n\n\n\tdataUrlToMime: dataurl => dataurl.match('data:([^;]+);')[1],\n\n\tdataUrlToType: dataurl => dataurl.match('data:([^\\/]+)\\/')[1],\n\n\tdataUrlToBlob: ( dataurl ) => {\n\t\tlet arr = dataurl.split(','),\n\t\t\ttype = arr[0].match(/:(.*?);/)[1],\n\t\t\tbstr = atob(arr[1]),\n\t\t\tn = bstr.length,\n\t\t\tu8arr = new Uint8Array(n);\n\n\t\twhile(n--){\n\t\t\tu8arr[n] = bstr.charCodeAt(n);\n\t\t}\n\t\treturn new Blob( [u8arr], { type: type } )\n\t},\n\n\tdataUrlToFile: ( dataurl, filename = '' ) => Converter.blobToFile( Converter.dataUrlToBlob(dataurl), filename ),\n\n\tdataUrlToBlobUrl: dataurl => Converter.fileToBlobUrl( Converter.dataUrlToBlob( dataurl ) ),\n\n\tfileToBlobUrl: file => URL.createObjectURL(file),\n\n\tfileToDataUrl: file => new Promise( ( resolve, reject ) => {\n\t\tconst fr = new FileReader()\n\t\tfr.addEventListener('load', () => resolve( fr.result )  )\n\t\tfr.readAsDataURL( file )\n\t}),\n}\n\nmodule.exports = Converter\n","import mime from 'mime'\n\n/**\n *\tGenerate a filename\n */\nconst generateFilename = suffix => {\n\n\tconst zerofill = (n,len = 2) => {\n\t\treturn ('00' + n.toString()).substr(-len)\n\t}\n\n\tlet name = thepaste.options.default_filename\n\n\tconst now = new Date(),\n\t\tpostname = document.querySelector('#post [name=\"post_title\"]#title')?.value\n\t\t\t|| document.querySelector('.wp-block-post-title')?.textContent\n\t\t\t|| document.querySelector('h1')?.textContent,\n\t\treplace_values = thepaste.options.filename_values,\n\t\t// username = document.querySelector('.display-name')?.textContent,\n\t\tmap = [\n\t\t\t{ s: '%Y', r: now.getFullYear() },\n\t\t\t{ s: '%y', r: now.getFullYear() % 100 },\n\t\t\t{ s: '%m', r: zerofill(now.getMonth() + 1) },\n\t\t\t{ s: '%d', r: zerofill(now.getDate()) },\n\t\t\t{ s: '%e', r: now.getDate() },\n\t\t\t{ s: '%H', r: zerofill(now.getHours()) },\n\t\t\t{ s: '%I', r: zerofill(now.getHours() % 12 ) },\n\t\t\t{ s: '%M', r: zerofill(now.getMinutes()) },\n\t\t\t{ s: '%S', r: zerofill(now.getSeconds()) },\n\t\t\t{ s: '%s', r: Math.floor( now.getTime() / 1000 ) },\n\t\t\t{ s: '%x', r: now.toLocaleDateString() },\n\t\t\t{ s: '%X', r: now.toLocaleTimeString() }\n\t\t];\n\tif ( 'undefined' !== typeof postname ) {\n\t\tmap.push( { s: '<postname>', r: postname } );\n\t} else {\n\t\tmap.push( { s: '<postname>', r: '' } );\n\t}\n\tObject.keys( replace_values ).forEach( k => {\n\t\tif ( !! replace_values[k] ) {\n\t\t\tmap.push( { s: `<${k}>`, r: replace_values[k] } );\n\t\t} else {\n\t\t\tmap.push( { s: `<${k}>`, r: '' } );\n\t\t}\n\t})\n\tmap.forEach(function(el){\n\t\tname = name.replace( el.s, el.r )\n\t})\n\tif ( 'string' === typeof suffix) {\n\t\tname += '.' + suffix;\n\t}\n\treturn name;\n}\nconst safeFilename = ( file, filename = '' ) => {\n\tlet type = file.type\n\n\tconst suffix = mime.extension(type)\n\tfilename = filename.replace(/[^\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\p{Zs}]/ug,'-').trim()\n\tif ( ! filename ) {\n\t\tfilename = generateFilename( suffix )\n\t}\n\tif ( suffix !== filename.split('.').pop() ) {\n\t\tfilename += `.${suffix}`\n\t}\n\treturn filename\n}\n\nmodule.exports = { generateFilename, safeFilename }\n","const exts  = Object.keys( thepaste.options.mime_types )\nconst types = Object.values( thepaste.options.mime_types )\n\n// windows\nexts.push('zip')\ntypes.push('application/x-zip-compressed')\n\nmodule.exports = {\n\textension: type => {\n\t\tconst idx = types.indexOf( type )\n\t\treturn -1 !== idx ? exts[idx] : false\n\t},\n\ttype: ext => {\n\t\tconst idx = exts.indexOf( ext )\n\t\treturn -1 !== idx ? types[idx] : false\n\t}\n}\n","import $ from 'jquery'\n\nclass Notices {\n\n\tstatic #dismissButton = `<button type=\"button\" class=\"notice-dismiss\"><span class=\"screen-reader-text\">${wp.i18n.__( 'Dismiss this notice.' )}</span></button>`;\n\n\tstatic success( message, dismissible = false ) {\n\t\tNotices.#addNotice( 'updated', message, dismissible )\n\t}\n\n\tstatic notify( message, dismissible = false ) {\n\t\tNotices.#addNotice( '', message, dismissible )\n\t}\n\n\tstatic warn( message, dismissible = false ) {\n\t\tNotices.#addNotice( 'notice-warning', message, dismissible )\n\t}\n\n\tstatic error( message, dismissible = false ) {\n\t\tNotices.#addNotice( 'error', message, dismissible )\n\t}\n\n\tstatic #addNotice( type, message, dismissible = false ) {\n\t\tconst classes = `${type} notice ${dismissible?'is-dismissible':''}`.trim()\n\t\tconst html = `<div class=\"${classes}\"><p>${message}</p></div>`;\n\t\tconst $headerEnd = $( '.wp-header-end' ).first();\n\t\t$(html).insertAfter( $headerEnd );\n\t\t$(document).trigger( 'wp-updates-notice-added' );\n\t}\n}\n\nmodule.exports = Notices\n","import mime from 'mime'\nimport Converter from 'converter'\nimport Notices from 'notices'\nimport { rml } from 'compat'\n\nconst allowedExtensions   = _wpPluploadSettings.defaults.filters.mime_types[0].extensions.split(',')\nconst maxFileSize         = Math.min( 1024*1024*200, parseInt(_wpPluploadSettings.defaults.filters.max_file_size) ) // 100MB or uplaod max filesize\n\nconst sizeAllowed = file => {\n\treturn !!file && file.size <= maxFileSize\n}\nconst extensionAllowed = file => {\n\treturn !!file && allowedExtensions.includes( mime.extension( file.type ) )\n}\n\n\nclass WPUploader {\n\tstatic #workflow\n\tonUploaded = () => {}\n\tonProgress = () => {}\n\tonError    = () => {}\n\t#file\n\n\t#progressHandler = (up,args) => {\n\t\tif ( this.#isitMe(args) ) {\n\t\t\tthis.onProgress( args.percent )\n\t\t}\n\t}\n\t#uploadedHandler = ( up, args, response ) => {\n\t\tif ( this.#isitMe(args) ) {\n\t\t\tthis.onUploaded( args )\n\t\t\tthis.#removeListeners()\n\t\t}\n\t}\n\t#errorHandler = ( up, args, c = 0 ) => {\n\t\tif ( this.#isitMe(args) ) {\n\t\t\tthis.onError(args)\n\t\t}\n\t}\n\n\t#isitMe(args) {\n\t\treturn this.#file.name === args.name && this.#file.size === args.size\n\t}\n\n\tstatic get ready() {\n\t\treturn !! WPUploader.workflow.uploader.uploader && !! WPUploader.workflow.uploader.uploader.ready\n\t}\n\n\tstatic get workflow() {\n\t\tif ( ! WPUploader.#workflow ) {\n\t\t\tWPUploader.#workflow = wp.media.editor.open( window.wpActiveEditor, {\n\t\t\t\tframe:    'post',\n\t\t\t\tstate:    'insert',\n\t\t\t\ttitle:    thepaste.l10n.copy_paste,\n\t\t\t\tmultiple: false\n\t\t\t})\n\t\t}\n\t\treturn WPUploader.#workflow\n\t}\n\n\tstatic get uploader() {\n\t\treturn WPUploader.workflow.uploader.uploader.uploader\n\t}\n\n\tstatic get(file) {\n\t\treturn new WPUploader(file)\n\t}\n\n\tconstructor(file) {\n\n\t\t// sanitize file\n\t\tif ( ! file.name ) {\n\t\t\tfile.name = Uploader.getFilename( mime.extension(file.type) )\n\t\t}\n\n\t\tthis.#file = rml.file(file)\n\n\t}\n\n\tdestructor() {\n\t\tWPUploader.workflow.close()\n\t}\n\n\tupload() {\n\t\tif ( WPUploader.ready ) {\n\t\t\tthis.#upload()\n\t\t} else {\n\t\t\tWPUploader.workflow.once( 'uploader:ready', () => {\n\t\t\t\tthis.#upload()\n\t\t\t} );\n\t\t}\n\t}\n\t#upload() {\n\t\tthis.#addListeners()\n\t\tWPUploader.uploader.addFile( this.#file );\n\t\tWPUploader.workflow.close()\n\t}\n\n\t#addListeners() {\n\t\tWPUploader.uploader.bind( 'UploadProgress', this.#progressHandler, this );\n\t\tWPUploader.uploader.bind( 'FileUploaded', this.#uploadedHandler, this );\n\t\tWPUploader.uploader.bind( 'Error', this.#errorHandler, this );\n\t}\n\n\t#removeListeners() {\n\t\tWPUploader.uploader.unbind( 'UploadProgress', this.#progressHandler, this );\n\t\tWPUploader.uploader.unbind( 'FileUploaded', this.#uploadedHandler, this );\n\t\tWPUploader.uploader.unbind( 'Error', this.#errorHandler, this );\n\t}\n\n\tdump() {\n\t\tconsole.log(arguments)\n\t}\n}\n\n\nconst Uploader = {\n\tinlineUpload: async el => {\n\n\t\tconst file = await Converter.elementToFile( el )\n\t\tconst uploader = WPUploader.get(file)\n\t\tconst progress = document.createElement('progress')\n\n\t\tprogress.classList.add('the-paste-progress')\n\n\t\tif ( ! sizeAllowed(file) ) {\n\t\t\tthrow new ErrorEvent('the-paste-upload', { message: `File size exceeds ${maxFileSize} byte`,  })\n\t\t}\n\n\t\tif ( ! extensionAllowed(file) ) {\n\t\t\tthrow new ErrorEvent('the-paste-upload', { message: `Type ${file.type} not allowed`,  })\n\t\t}\n\t\t// dom\n\t\tprogress.max = 100\n\t\tel.parentNode?.insertBefore(progress,el)\n\t\tel.remove()\n\t\t// upload process\n\t\tuploader.onProgress = percent => {\n\t\t\tprogress.value = percent\n\t\t}\n\t\tuploader.onError = error => {\n\t\t\tconsole.error(error)\n\t\t\tNotices.error( `<strong>${thepaste.l10n.the_paste}:</strong> ${error.message} File: <em>${file.name}</em>`, true )\n\t\t\tprogress.remove()\n\t\t}\n\t\tuploader.onUploaded = args => {\n\n\t\t\tconst newElement = document.createElement('p')\n\t\t\tconst attachment = args.attachment.attributes\n\t\t\tconst link = getUserSetting( 'urlbutton', 'none' )\n\n\t\t\tif ( 'image' === attachment.type ) {\n\t\t\t\tnewElement.innerHTML = wp.media.string.image( {\n\t\t\t\t\tlink,\n\t\t\t\t\talign: getUserSetting( 'align', 'none' ),\n\t\t\t\t\tsize:  getUserSetting( 'imgsize', 'medium' ),\n\t\t\t\t}, attachment )\n\n\t\t\t} else if ( 'video' === attachment.type ) {\n\t\t\t\tnewElement.innerHTML = wp.media.string.video( {\n\t\t\t\t\tlink: link !== 'none'\n\t\t\t\t\t\t? link\n\t\t\t\t\t\t: 'embed'\n\t\t\t\t}, attachment )\n\n\t\t\t} else if ( 'audio' === attachment.type ) {\n\t\t\t\tnewElement.innerHTML = wp.media.string.audio( {\n\t\t\t\t\tlink: link !== 'none'\n\t\t\t\t\t\t? link\n\t\t\t\t\t\t: 'embed'\n\t\t\t\t}, attachment )\n\n\t\t\t} else {\n\t\t\t\tnewElement.innerHTML = wp.media.string.link( {\n\t\t\t\t\tlink: link !== 'none'\n\t\t\t\t\t\t? link\n\t\t\t\t\t\t: 'file'\n\t\t\t\t}, attachment )\n\t\t\t}\n\t\t\tprogress.replaceWith( newElement.childNodes[0] )\n\t\t}\n\t\tuploader.upload()\n\t},\n\t/**\n\t *\tGenerate a filename\n\t */\n\tgetFilename: suffix => {\n\n\t\tconst zerofill = (n,len = 2) => {\n\t\t\treturn ('00' + n.toString()).substr(-len)\n\t\t}\n\n\t\tlet name = thepaste.options.default_filename\n\n\t\tconst now = new Date(),\n\t\t\tpostname = document.querySelector('#post [name=\"post_title\"]#title').value,\n\t\t\tusername = document.querySelector('.display-name').textContent,\n\t\t\tmap = [\n\t\t\t\t{ s: '%Y', r: now.getFullYear() },\n\t\t\t\t{ s: '%y', r: now.getFullYear() % 100 },\n\t\t\t\t{ s: '%m', r: zerofill(now.getMonth() + 1) },\n\t\t\t\t{ s: '%d', r: zerofill(now.getDate()) },\n\t\t\t\t{ s: '%e', r: now.getDate() },\n\t\t\t\t{ s: '%H', r: zerofill(now.getHours()) },\n\t\t\t\t{ s: '%I', r: zerofill(now.getHours() % 12 ) },\n\t\t\t\t{ s: '%M', r: zerofill(now.getMinutes()) },\n\t\t\t\t{ s: '%S', r: zerofill(now.getSeconds()) },\n\t\t\t\t{ s: '%s', r: Math.floor( now.getTime() / 1000 ) }\n\t\t\t];\n\t\tif ( 'undefined' !== typeof postname ) {\n\t\t\tmap.push( { s: '<postname>', r: postname } );\n\t\t} else {\n\t\t\tmap.push( { s: '<postname>', r: '' } );\n\t\t}\n\t\tmap.forEach( function(el) {\n\t\t\tname = name.replace( el.s, el.r )\n\t\t})\n\t\tif ( 'string' === typeof suffix) {\n\t\t\tname += '.' + suffix;\n\t\t}\n\t\treturn name;\n\t}\n}\nmodule.exports = Uploader\n"]}