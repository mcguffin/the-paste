{"version":3,"sources":["admin/node_modules/browser-pack/_prelude.js","admin/src/js/admin/the-paste/index.js","admin/src/js/lib/compat.js","admin/src/js/lib/converter.js","admin/src/js/lib/filename.js","admin/src/js/lib/image-dialog.js","admin/src/js/lib/image-list.js","admin/src/js/lib/mime.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_converter","_interopRequireDefault","_imageDialog","_compat","obj","__esModule","default","PasteInstructions","wp","media","View","extend","template","className","render","prototype","apply","this","arguments","setInterval","$el","prop","document","hasFocus","_","view","MediaFrame","_parentInitialize","initialize","title","on","addPasteInstructions","pasteInstructions","find","append","el","AttachmentsBrowser","priority","toolbar","set","addEventListener","files","is","Array","from","clipboardData","preventDefault","stopPropagation","push","clipboardItemsToFiles","items","handlePastedFiles","capture","async","images","uploader","controller","forEach","file","test","type","addFile","rml","await","supports","svg","_wpPluploadSettings","defaults","filters","mime_types","extensions","split","includes","webp","createElement","toDataURL","indexOf","getSource","_filename","Converter","clipboardItems","Promise","resolve","reject","promises","map","item","kind","_textPlain$textHtml","text/plain","str","itemToString","toLowerCase","DOMParser","parseFromString","querySelector","stringToFile","text/html","loc","URL","location","div","innerHTML","imgs","querySelectorAll","filter","img","src","protocol","hostname","elementToFile","allSettled","then","result","promise","value","fl","size","catch","err","console","error","clipboardItemsToHtml","let","gdocsItemToSources","getAsString","Object","values","JSON","parse","data","image_urls","gdocsItemToFiles","sources","blobUrlToFile","urlToFile","alt","url","filename","undefined","schema","substr","dataUrlToFile","urlToMime","mime","dataUrlToMime","blobUrlToMime","urlToType","urlToBlobUrl","fileToBlobUrl","blobToFile","Blob","blob","File","safeFilename","blobUrl","blobUrlToBlob","blobUrlToType","fetch","blobUrlToDataUrl","fileToDataUrl","dataurl","match","dataUrlToType","dataUrlToBlob","arr","bstr","atob","u8arr","Uint8Array","charCodeAt","dataUrlToBlobUrl","createObjectURL","fr","FileReader","readAsDataURL","_mime","generateFilename","suffix","zerofill","len","toString","_document$querySelect3","name","thepaste","options","default_filename","now","Date","postname","_document$querySelect","_document$querySelect2","textContent","replace_values","filename_values","s","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getTime","toLocaleDateString","toLocaleTimeString","keys","k","concat","replace","extension","trim","pop","_jquery","window","global","_imageList","modal","list","addFiles","Modal","events","keydown","key","submit","close","click .media-modal-close","trigger","l10n","the_paste","isModal","getFiles","content","open","toggleClass","setTimeout","remove","ImageListItem","tagName","click [name=\"discard\"]","change [name=\"the-paste-format\"]","_ref","rawImage","Image","hasSize","width","height","canvas","$","get","body","after","getContext","drawImage","updateView","outputFormat","val","show","hide","basename","getFile","quality","parseFloat","jpeg_quality","toBlob","discard","discardItem","ImageList","click .media-frame-toolbar button","button","Button","it","exts","types","idx","ext"],"mappings":"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","file":"the-paste.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Converter from 'converter'\nimport imageDialog from 'image-dialog'\nimport { rml } from 'compat'\nlet uploader\n\n// Show paste notice in media library\nconst PasteInstructions = wp.media.View.extend({\n\ttemplate: wp.template('the-paste-instructions'),\n\tclassName: 'the-paste-instructions',\n\trender: function() {\n\t\twp.media.View.prototype.render.apply(this,arguments);\n\t\tsetInterval( () => {\n\t\t\tthis.$el.prop('hidden', ! document.hasFocus() )\n\t\t}, 100 )\n\t}\n})\n\n_.extend( wp.media.view.MediaFrame.prototype, {\n\t_parentInitialize:\twp.media.view.MediaFrame.prototype.initialize,\n\tinitialize: function(title) {\n\t\tthis._parentInitialize.apply(this,arguments);\n\t\tthis.on( 'attach', this.addPasteInstructions, this );\n\t\tthis.pasteInstructions = new PasteInstructions()\n\t\tthis.pasteInstructions.render()\n\t},\n\taddPasteInstructions: function() {\n\t\tthis.$el.find('#media-frame-title').append(this.pasteInstructions.el)\n\t}\n})\n\n// set uploader global var\n_.extend( wp.media.view.AttachmentsBrowser.prototype, {\n\t_parentInitialize:\twp.media.view.AttachmentsBrowser.prototype.initialize,\n\tinitialize:\tfunction() {\n\n\t\tthis._parentInitialize.apply(this,arguments);\n\n\t\tconst pasteInstructions = new PasteInstructions({\n\t\t\tpriority : -10,\n\t\t})\n\t\tpasteInstructions.render()\n\t\tthis.toolbar.set( 'pasteInstructions', pasteInstructions );\n\n\t\tdocument.addEventListener( 'paste', async e => {\n\n\t\t\tif ( ! this.$el.is(':visible') ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst files = Array.from( e.clipboardData.files )\n\n\t\t\t// prevent event bubbling to block editor element. File gets uploaded twice otherwise.\n\t\t\tif ( files.length ) {\n\t\t\t\te.preventDefault()\n\t\t\t\te.stopPropagation()\n\t\t\t}\n\n\t\t\tfiles.push( ... await Converter.clipboardItemsToFiles( e.clipboardData.items ) ) // why did we do this?\n\n\t\t\tif ( files.length ) {\n\t\t\t\treturn await this.handlePastedFiles( files )\n\t\t\t}\n\n\t\t}, { capture: true } )\n\t},\n\thandlePastedFiles: async function(files) {\n\t\tconst images = [],\n\t\t\tuploader = this.controller.uploader.uploader.uploader\n\t\tfiles.forEach( file => {\n\t\t\tif ( /^image\\//.test( file.type ) ) {\n\t\t\t\timages.push(file)\n\t\t\t} else {\n\t\t\t\tuploader.addFile( rml.file(file) )\n\t\t\t}\n\t\t} )\n\t\tif ( images.length ) {\n\t\t\tconst uploadFiles = await imageDialog( images )\n\t\t\tuploadFiles.forEach( file => uploader.addFile( rml.file(file) ) )\n\t\t}\n\t}\n})\n","// Compatibility with [Real Media Library](https://wordpress.org/plugins/real-media-library-lite/)\n// @see https://github.com/mcguffin/the-paste/issues/47\n\nclass Supports {\n\tget svg() {\n\t\treturn _wpPluploadSettings.defaults.filters.mime_types[0].extensions.split(',').includes('svg')\n\t}\n\tget webp() {\n\t\treturn document.createElement('canvas').toDataURL('image/webp').indexOf('data:image/webp') == 0\n\t}\n}\n\nconst rml = {\n\tfile: file => {\n\t\tif ( ! file.getSource ) {\n\t\t\t// return native file object\n\t\t\t// mimic mOxie.Blob.getSource()\n\t\t\tfile.getSource = () => {\n\t\t\t\treturn file\n\t\t\t}\n\t\t}\n\t\treturn file\n\t}\n}\n\nconst supports = new Supports()\n\nmodule.exports = { rml, supports }\n","import { supports } from 'compat'\nimport { safeFilename } from 'filename'\n\n\nconst itemHandler = type => {\n\treturn {\n\t\t'text/plain': async item => {\n\t\t\tif ( supports.svg ) {\n\t\t\t\tconst str = await Converter.itemToString( item )\n\t\t\t\tif ( str.toLowerCase().indexOf('<svg') >= 0 ) {\n\t\t\t\t\tconst domParser = new DOMParser()\n\t\t\t\t\tif ( domParser.parseFromString(str,'image/svg+xml').querySelector('svg') ) {\n\t\t\t\t\t\treturn [ Converter.stringToFile( str, 'image/svg+xml' ) ]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn []\n\t\t},\n\t\t'text/html': async item => {\n\t\t\tconst loc = new URL( document.location )\n\t\t\tconst div = document.createElement('div')\n\t\t\tdiv.innerHTML = await Converter.itemToString( item )\n\n\t\t\tconst imgs = Array.from( div.querySelectorAll('img') )\n\t\t\t\t.filter( img => {\n\t\t\t\t\t// remove images from same domain\n\t\t\t\t\tconst u = new URL(img.src)\n\t\t\t\t\treturn ! ['http:','https:'].includes(u.protocol) || loc.hostname !== u.hostname\n\t\t\t\t} )\n\t\t\t\t.map( img => Converter.elementToFile(img) )\n\n\t\t\treturn new Promise( (resolve,reject) => {\n\t\t\t\tPromise.allSettled( imgs ).then( result => resolve( Array.from(result).map( promise => promise.value )) )\n\t\t\t})\n\t\t},\n\t\t// 'application/x-vnd.google-docs-image-clip+wrapped': async item => await Converter.gdocsItemToFiles( item ), // <== dont need this\n\t}[type]??(()=>new Promise((resolve,reject)=>resolve([])))\n}\n\nconst Converter = {\n\tclipboardItemsToFiles: clipboardItems => {\n\t\tconst files = []\n\t\treturn new Promise((resolve,reject) => {\n\t\t\tconst promises = Array.from(clipboardItems).map( item => {\n\t\t\t\tif ( 'string' === item.kind ) {\n\t\t\t\t\tconst handler = itemHandler(item.type)\n\t\t\t\t\treturn handler( item )\n\t\t\t\t\t\t.then( f => {\n\t\t\t\t\t\t\tfiles.push( ...f.filter( fl => fl.size > 0 ) )\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.catch( err => console.error(err) )\n\t\t\t\t}\n\t\t\t})\n\t\t\tPromise.allSettled(promises).then( () => resolve(files))\n\t\t})\n\t},\n\tclipboardItemsToHtml:  async clipboardItems => {\n\t\tlet i, item\n\t\tfor ( i=0; i < clipboardItems.length; i++ ) {\n\t\t\titem = clipboardItems[i]\n\t\t\tif ( 'string' === item.kind && 'text/html' === item.type ) {\n\t\t\t\treturn await Converter.itemToString( item )\n\t\t\t}\n\t\t}\n\t\treturn ''\n\t},\n\tgdocsItemToSources: async item => new Promise( (resolve, reject) => {\n\t\titem.getAsString( async str => {\n\t\t\tconst src = Object.values(JSON.parse(JSON.parse( str ).data ).image_urls )\n\t\t\tresolve(src)\n\t\t} )\n\t}),\n\tgdocsItemToFiles: async item => {\n\t\tlet i\n\t\tconst sources = await Converter.gdocsItemToSources(item)\n\t\tconst files = []\n\t\tfor ( i=0;i<sources.length; i++ ) {\n\t\t\tfiles.push( await Converter.blobUrlToFile(sources[i]) )\n\t\t}\n\t\treturn files\n\t},\n\titemToString: async item => new Promise( (resolve, reject) => {\n\t\titem.getAsString( str => resolve(str) )\n\t}),\n\n\telementToFile: async el => {\n\t\tconst file = await Converter.urlToFile(el.src,el.alt)\n\t\treturn file\n\t},\n\n\turlToFile: async ( url, filename = '') => {\n\t\tlet file\n\t\tconst schema = url.substr( 0, url.indexOf(':') )\n\t\tif ( 'data' === schema ) {\n\t\t\tfile = Converter.dataUrlToFile( url, filename )\n\t\t} else if ( ['blob','http','https'].includes( schema ) ) {\n\t\t\tfile = await Converter.blobUrlToFile( url, filename )\n\t\t}\n\t\treturn file\n\t},\n\turlToMime: async url => {\n\t\tconst schema = url.substr( 0, url.indexOf(':') )\n\t\tlet mime\n\t\tif ( 'data' === schema ) {\n\t\t\tmime = Converter.dataUrlToMime( url )\n\t\t} else if ( ['blob','http','https'].includes( schema ) ) {\n\t\t\tmime = await Converter.blobUrlToMime( url )\n\t\t}\n\t\treturn mime\n\t},\n\turlToType: async url => {\n\t\tconst mime = await Converter.urlToMime(url)\n\t\treturn mime.substr( 0, mime.indexOf('/'))\n\t},\n\turlToBlobUrl: async (url) => {\n\t\tconst file = await Converter.blobUrlToFile( url )\n\t\treturn Converter.fileToBlobUrl( file )\n\t},\n\n\tstringToFile: (str, type) => {\n\t\treturn Converter.blobToFile( new Blob( [str], {type} ) )\n\t},\n\n\tblobToFile: ( blob, filename = '' ) => {\n\t\treturn new File([blob], safeFilename( blob, filename ), { type: blob.type } );\n\t},\n\tblobUrlToMime: async blobUrl =>{\n\t\tconst blob = await Converter.blobUrlToBlob(blobUrl)\n\t\treturn blob.type\n\t},\n\tblobUrlToType: async blobUrl => {\n\t\tconst blob = await Converter.blobUrlToBlob(blobUrl)\n\t\treturn blob.type.substr(0,blob.type.indexOf('/'))\n\t},\n\tblobUrlToBlob: async ( blobUrl, filename = '' ) => {\n\t\tconst blob = await fetch( blobUrl ).then( r => r.blob() );\n\t\treturn blob\n\t},\n\tblobUrlToFile: async ( blobUrl, filename = '' ) => {\n\t\tconst blob = await Converter.blobUrlToBlob(blobUrl)\n\t\treturn Converter.blobToFile( blob, filename )\n\t},\n\tblobUrlToDataUrl: async blobUrl => {\n\t\tconst blob = await fetch(blobUrl).then( r => r.blob() );\n\t\tconst dataurl = await Converter.fileToDataUrl(blob)\n\t\treturn dataurl\n\t},\n\n\n\tdataUrlToMime: dataurl => dataurl.match('data:([^;]+);')[1],\n\n\tdataUrlToType: dataurl => dataurl.match('data:([^\\/]+)\\/')[1],\n\n\tdataUrlToBlob: ( dataurl ) => {\n\t\tlet arr = dataurl.split(','),\n\t\t\ttype = arr[0].match(/:(.*?);/)[1],\n\t\t\tbstr = atob(arr[1]),\n\t\t\tn = bstr.length,\n\t\t\tu8arr = new Uint8Array(n);\n\n\t\twhile(n--){\n\t\t\tu8arr[n] = bstr.charCodeAt(n);\n\t\t}\n\t\treturn new Blob( [u8arr], { type: type } )\n\t},\n\n\tdataUrlToFile: ( dataurl, filename = '' ) => Converter.blobToFile( Converter.dataUrlToBlob(dataurl), filename ),\n\n\tdataUrlToBlobUrl: dataurl => Converter.fileToBlobUrl( Converter.dataUrlToBlob( dataurl ) ),\n\n\tfileToBlobUrl: file => URL.createObjectURL(file),\n\n\tfileToDataUrl: file => new Promise( ( resolve, reject ) => {\n\t\tconst fr = new FileReader()\n\t\tfr.addEventListener('load', () => resolve( fr.result )  )\n\t\tfr.readAsDataURL( file )\n\t}),\n}\n\nmodule.exports = Converter\n","import mime from 'mime'\n\n/**\n *\tGenerate a filename\n */\nconst generateFilename = suffix => {\n\n\tconst zerofill = (n,len = 2) => {\n\t\treturn ('00' + n.toString()).substr(-len)\n\t}\n\n\tlet name = thepaste.options.default_filename\n\n\tconst now = new Date(),\n\t\tpostname = document.querySelector('#post [name=\"post_title\"]#title')?.value\n\t\t\t|| document.querySelector('.wp-block-post-title')?.textContent\n\t\t\t|| document.querySelector('h1')?.textContent,\n\t\treplace_values = thepaste.options.filename_values,\n\t\t// username = document.querySelector('.display-name')?.textContent,\n\t\tmap = [\n\t\t\t{ s: '%Y', r: now.getFullYear() },\n\t\t\t{ s: '%y', r: now.getFullYear() % 100 },\n\t\t\t{ s: '%m', r: zerofill(now.getMonth() + 1) },\n\t\t\t{ s: '%d', r: zerofill(now.getDate()) },\n\t\t\t{ s: '%e', r: now.getDate() },\n\t\t\t{ s: '%H', r: zerofill(now.getHours()) },\n\t\t\t{ s: '%I', r: zerofill(now.getHours() % 12 ) },\n\t\t\t{ s: '%M', r: zerofill(now.getMinutes()) },\n\t\t\t{ s: '%S', r: zerofill(now.getSeconds()) },\n\t\t\t{ s: '%s', r: Math.floor( now.getTime() / 1000 ) },\n\t\t\t{ s: '%x', r: now.toLocaleDateString() },\n\t\t\t{ s: '%X', r: now.toLocaleTimeString() }\n\t\t];\n\tif ( 'undefined' !== typeof postname ) {\n\t\tmap.push( { s: '<postname>', r: postname } );\n\t} else {\n\t\tmap.push( { s: '<postname>', r: '' } );\n\t}\n\tObject.keys( replace_values ).forEach( k => {\n\t\tif ( !! replace_values[k] ) {\n\t\t\tmap.push( { s: `<${k}>`, r: replace_values[k] } );\n\t\t} else {\n\t\t\tmap.push( { s: `<${k}>`, r: '' } );\n\t\t}\n\t})\n\tmap.forEach(function(el){\n\t\tname = name.replace( el.s, el.r )\n\t})\n\tif ( 'string' === typeof suffix) {\n\t\tname += '.' + suffix;\n\t}\n\treturn name;\n}\nconst safeFilename = ( file, filename = '' ) => {\n\tlet type = file.type\n\n\tconst suffix = mime.extension(type)\n\tfilename = filename.replace(/[^\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\p{Zs}]/ug,'-').trim()\n\tif ( ! filename ) {\n\t\tfilename = generateFilename( suffix )\n\t}\n\tif ( suffix !== filename.split('.').pop() ) {\n\t\tfilename += `.${suffix}`\n\t}\n\treturn filename\n}\n\nmodule.exports = { generateFilename, safeFilename }\n","import $ from 'jquery'\nimport ImageList from 'image-list'\n\nlet modal = null\nlet list  = null\n\nconst imageDialog = images => {\n\treturn new Promise( (resolve,reject) => {\n\t\tif ( modal !== null ) {\n\t\t\tlist.addFiles(images)\n\t\t\tresolve([])\n\t\t\treturn\n\t\t}\n\t\tmodal = new wp.media.view.Modal( {\n\t\t\tevents: {\n\t\t\t\t'keydown': function(e) {\n\t\t\t\t\tif ( e.key === 'Enter' ) {\n\t\t\t\t\t\tlist.submit()\n\t\t\t\t\t} else if ( e.key === 'Escape' ) {\n\t\t\t\t\t\tmodal.close()\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'click .media-modal-close': function(e) {\n\t\t\t\t\tmodal.close()\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontroller : {\n\t\t\t\ttrigger: () => {},\n\t\t\t},\n\t\t\ttitle      : thepaste.l10n.the_paste\n\t\t} );\n\t\tlist = new ImageList( { controller: modal })\n\t\tconst isModal = $('body').is('.modal-open')\n\t\tlist.on( 'thepaste:submit', async () => {\n\t\t\tconst files = await list.getFiles()\n\t\t\tmodal.close()\n\t\t\tresolve( files )\n\t\t})\n\t\tlist.on('thepaste:cancel',() => {\n\t\t\tmodal.close()\n\t\t\tresolve([])\n\t\t} )\n\t\tmodal.content( list );\n\t\tlist.addFiles(images)\n\t\tmodal.open();\n\t\tmodal.on('close', () => {\n\t\t\t$('body').toggleClass( 'the-paste-modal-open', false )\n\t\t\t$('body').toggleClass( 'modal-open', isModal )\n\t\t\tsetTimeout( () => {\n\t\t\t\tmodal.remove()\n\t\t\t\tmodal = null\n\t\t\t}, 10 )\n\t\t})\n\t\t$('body').toggleClass( 'the-paste-modal-open', true )\n\t})\n}\n\nmodule.exports = imageDialog\n","import Converter from 'converter'\nimport mime from 'mime'\nimport { supports } from 'compat'\nimport { generateFilename } from 'filename'\n\nconst ImageListItem = wp.media.View.extend({\n\ttagName:'form',\n\ttemplate: wp.template('the-paste-image-list-item'),\n\tclassName: 'the-paste-image-list-item',\n\tevents: {\n\t\t'click [name=\"discard\"]': 'discard',\n\t\t'change [name=\"the-paste-format\"]': 'updateView',\n\t},\n\tinitialize : function( { file } ) {\n\t\twp.media.View.prototype.initialize.apply( this, arguments );\n\t\tthis.file = file\n\t\tnew Promise( (resolve,reject) => {\n\t\t\tconst rawImage = new Image();\n\t\t\trawImage.addEventListener(\"load\", function () {\n\t\t\t\tresolve(rawImage);\n\t\t\t});\n\t\t\trawImage.src = Converter.fileToBlobUrl(file);\n\t\t})\n\t\t.then( rawImage => {\n\t\t\tlet hasSize = rawImage.width && rawImage.height\n\t\t\tthis.canvas = this.$('canvas').get(0)\n\n\t\t\tif ( 'image/svg+xml' === this.file.type ) {\n\t\t\t\t// append image to DOM to get actual size\n\t\t\t\tif ( hasSize ) {\n\t\t\t\t\tdocument.body.append(rawImage)\n\t\t\t\t} else {\n\t\t\t\t\tthis.canvas.after(rawImage)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// draw canvas\n\t\t\tthis.canvas.width = rawImage.width;\n\t\t\tthis.canvas.height = rawImage.height;\n\t\t\tthis.canvas.getContext(\"2d\").drawImage(rawImage, 0, 0);\n\n\t\t\tif ( 'image/svg+xml' === this.file.type ) {\n\t\t\t\tif ( hasSize ) {\n\t\t\t\t\trawImage.remove()\n\t\t\t\t} else {\n\t\t\t\t\t// no known size: svg only\n\t\t\t\t\tthis.$(`[data-format]:not([data-format=\"image/svg+xml\"])`).remove()\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\tupdateView: function() {\n\t\t// if input fmt != output fmt\n\t\tconst outputFormat = this.$('[name=\"the-paste-format\"]:checked').val()\n\t\tif ( outputFormat !== this.file.type && ['image/webp','image/jpeg'].includes( outputFormat ) ) {\n\t\t\tthis.$('.the-paste-quality').show()\n\t\t} else {\n\t\t\tthis.$('.the-paste-quality').hide()\n\t\t}\n\t},\n\trender: function() {\n\t\twp.media.View.prototype.render.apply(this,arguments);\n\n\t\tconst type     = this.file.type\n\t\tconst basename = this.file.name.replace(/\\.([^\\.]*)$/,'')\n\n\t\tif ( ! supports.webp ) {\n\t\t\tif ( 'image/webp' !== type ) {\n\t\t\t\tthis.$(`[data-format=\"image/webp\"]`).remove()\n\t\t\t}\n\t\t}\n\n\t\tthis.$(`[name=\"the-paste-format\"][value=\"${type}\"]`).prop('checked', true )\n\t\tthis.$('[name=\"the-paste-filename\"]').val( basename )\n\t\tthis.$('[name=\"the-paste-filename\"]').prop( 'placeholder', generateFilename() )\n\n\t\tif ( ! supports.svg || 'image/svg+xml' !== type ) {\n\t\t\tthis.$(`[data-format=\"image/svg+xml\"]`).remove()\n\t\t\tif ( 'image/svg+xml' === type ) {\n\t\t\t\tthis.$(`[name=\"the-paste-format\"][value=\"image/png\"]`).prop('checked',true)\n\t\t\t}\n\t\t}\n\n\t\tthis.updateView()\n\t},\n\tgetFile: function() {\n\t\tconst type = this.$('[name=\"the-paste-format\"]:checked').val()\n\t\tconst name = this.$('[name=\"the-paste-filename\"]').val() || generateFilename()\n\t\tconst filename = `${name}.${mime.extension(type)}`\n\t\tconst quality  = parseFloat( this.$('[name=\"the-paste-quality\"]').val() ) || thepaste.options.jpeg_quality\n\t\t// upload as-is\n\n\t\tif ( this.file.type === type ) {\n\t\t\treturn new Promise((resolve,reject) => {\n\t\t\t\tresolve( new File( [this.file], filename, { type } ) )\n\t\t\t})\n\t\t}\n\n\t\t// type conversion\n\t\treturn new Promise((resolve,reject) => {\n\t\t\tthis.canvas.toBlob( blob => {\n\t\t\t\tresolve( Converter.blobToFile( blob, filename ) )\n\t\t\t}, type, quality * 0.01 )\n\t\t})\n\t},\n\tdiscard: function() {\n\t\tthis.controller.discardItem(this)\n\t}\n})\n\nconst ImageList = wp.media.View.extend({\n\ttemplate: wp.template('the-paste-image-list'),\n\tclassName: 'the-paste-image-list',\n\tevents: {\n\t\t'click .media-frame-toolbar button': 'submit',\n\t},\n\tinitialize : function() {\n\t\twp.media.View.prototype.initialize.apply( this, arguments );\n\t\tthis.files = []\n\t\tthis.items = []\n\t\tthis.button = new wp.media.view.Button({\n\t\t\tclassName: 'button-primary button-hero',\n\t\t})\n\t\tthis.render()\n\t},\n\tdiscardItem:function(item) {\n\t\tthis.files = this.files.filter( file => file !== item.file )\n\t\tthis.items = this.items.filter( it => it !== item )\n\t\titem.$el.remove()\n\t\tif ( ! this.items.length ) {\n\t\t\tthis.trigger('thepaste:cancel')\n\t\t}\n\t},\n\taddFiles: function( files ) {\n\t\tthis.files.push( ...files )\n\t\tfiles.forEach( file => {\n\t\t\tconst item = new ImageListItem({file,controller:this})\n\t\t\titem.render()\n\t\t\tthis.$('.content').append(item.$el)\n\t\t\tthis.items.push( item )\n\t\t\titem.render()\n\t\t} )\n\t},\n\tgetFiles: async function() {\n\t\tconst files = []\n\t\tfor ( const item of this.items ) {\n\t\t\tfiles.push( await item.getFile() )\n\t\t}\n\t\treturn files\n\t},\n\tsubmit: function() {\n\t\tthis.trigger('thepaste:submit')\n\t},\n})\n\nmodule.exports = ImageList\n","const exts  = Object.keys( thepaste.options.mime_types )\nconst types = Object.values( thepaste.options.mime_types )\n\n// windows\nexts.push('zip')\ntypes.push('application/x-zip-compressed')\n\nmodule.exports = {\n\textension: type => {\n\t\tconst idx = types.indexOf( type )\n\t\treturn -1 !== idx ? exts[idx] : false\n\t},\n\ttype: ext => {\n\t\tconst idx = exts.indexOf( ext )\n\t\treturn -1 !== idx ? types[idx] : false\n\t}\n}\n"]}