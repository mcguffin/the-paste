{"version":3,"sources":["admin/node_modules/browser-pack/_prelude.js","admin/src/js/admin/the-paste/index.js","admin/src/js/lib/compat.js","admin/src/js/lib/converter.js","admin/src/js/lib/filename.js","admin/src/js/lib/image-dialog.js","admin/src/js/lib/image-list.js","admin/src/js/lib/mime.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","_converter","_interopRequireDefault","_imageDialog","_compat","__esModule","default","PasteInstructions","wp","media","View","extend","template","className","render","prototype","apply","this","arguments","setInterval","$el","prop","document","hasFocus","_","view","MediaFrame","_parentInitialize","initialize","title","on","addPasteInstructions","pasteInstructions","find","append","el","AttachmentsBrowser","priority","toolbar","set","addEventListener","async","is","files","Array","from","clipboardData","preventDefault","stopPropagation","push","clipboardItemsToFiles","items","handlePastedFiles","capture","images","uploader","controller","forEach","file","test","type","addFile","rml","supports","svg","_wpPluploadSettings","defaults","filters","mime_types","extensions","split","includes","webp","createElement","toDataURL","indexOf","getSource","_filename","Converter","clipboardItems","Promise","resolve","reject","promises","map","item","kind","handler","_textPlain$textHtml","str","itemToString","toLowerCase","DOMParser","parseFromString","querySelector","stringToFile","loc","URL","location","div","innerHTML","imgs","querySelectorAll","filter","img","src","protocol","hostname","elementToFile","allSettled","then","result","promise","value","fl","size","catch","err","console","error","clipboardItemsToHtml","gdocsItemToSources","getAsString","Object","values","JSON","parse","data","image_urls","gdocsItemToFiles","sources","blobUrlToFile","urlToFile","alt","url","filename","undefined","schema","substr","dataUrlToFile","urlToMime","mime","dataUrlToMime","blobUrlToMime","urlToType","urlToBlobUrl","fileToBlobUrl","blobToFile","Blob","blob","File","safeFilename","blobUrlToBlob","blobUrl","blobUrlToType","fetch","blobUrlToDataUrl","fileToDataUrl","dataurl","match","dataUrlToType","dataUrlToBlob","arr","bstr","atob","u8arr","Uint8Array","charCodeAt","dataUrlToBlobUrl","createObjectURL","fr","FileReader","readAsDataURL","_mime","generateFilename","suffix","_document$querySelect","_document$querySelect2","_document$querySelect3","zerofill","len","toString","name","thepaste","options","default_filename","now","Date","postname","textContent","replace_values","filename_values","s","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getTime","toLocaleDateString","toLocaleTimeString","keys","k","concat","replace","extension","trim","pop","_jquery","window","global","_imageList","modal","list","addFiles","Modal","events","keydown","key","submit","close","trigger","l10n","the_paste","isModal","getFiles","content","open","toggleClass","setTimeout","remove","ImageListItem","tagName","_ref","rawImage","Image","hasSize","width","height","canvas","$","get","body","after","getContext","drawImage","updateView","outputFormat","val","show","hide","basename","getFile","quality","parseFloat","jpeg_quality","toBlob","discard","discardItem","ImageList","button","Button","it","exts","types","idx","ext"],"mappings":"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","file":"the-paste.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Converter from 'converter'\nimport imageDialog from 'image-dialog'\nimport { rml } from 'compat'\nlet uploader\n\n// Show paste notice in media library\nconst PasteInstructions = wp.media.View.extend({\n\ttemplate: wp.template('the-paste-instructions'),\n\tclassName: 'the-paste-instructions',\n\trender: function() {\n\t\twp.media.View.prototype.render.apply(this,arguments);\n\t\tsetInterval( () => {\n\t\t\tthis.$el.prop('hidden', ! document.hasFocus() )\n\t\t}, 100 )\n\t}\n})\n\n_.extend( wp.media.view.MediaFrame.prototype, {\n\t_parentInitialize:\twp.media.view.MediaFrame.prototype.initialize,\n\tinitialize: function(title) {\n\t\tthis._parentInitialize.apply(this,arguments);\n\t\tthis.on( 'attach', this.addPasteInstructions, this );\n\t\tthis.pasteInstructions = new PasteInstructions()\n\t\tthis.pasteInstructions.render()\n\t},\n\taddPasteInstructions: function() {\n\t\tthis.$el.find('#media-frame-title').append(this.pasteInstructions.el)\n\t}\n})\n\n// set uploader global var\n_.extend( wp.media.view.AttachmentsBrowser.prototype, {\n\t_parentInitialize:\twp.media.view.AttachmentsBrowser.prototype.initialize,\n\tinitialize:\tfunction() {\n\n\t\tthis._parentInitialize.apply(this,arguments);\n\n\t\tconst pasteInstructions = new PasteInstructions({\n\t\t\tpriority : -10,\n\t\t})\n\t\tpasteInstructions.render()\n\t\tthis.toolbar.set( 'pasteInstructions', pasteInstructions );\n\n\t\tdocument.addEventListener( 'paste', async e => {\n\n\t\t\tif ( ! this.$el.is(':visible') ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst files = Array.from( e.clipboardData.files )\n\n\t\t\t// prevent event bubbling to block editor element. File gets uploaded twice otherwise.\n\t\t\tif ( files.length ) {\n\t\t\t\te.preventDefault()\n\t\t\t\te.stopPropagation()\n\t\t\t}\n\n\t\t\tfiles.push( ... await Converter.clipboardItemsToFiles( e.clipboardData.items ) ) // why did we do this?\n\n\t\t\tif ( files.length ) {\n\t\t\t\treturn await this.handlePastedFiles( files )\n\t\t\t}\n\n\t\t}, { capture: true } )\n\t},\n\thandlePastedFiles: async function(files) {\n\t\tconst images = [],\n\t\t\tuploader = this.controller.uploader.uploader.uploader\n\t\tfiles.forEach( file => {\n\t\t\tif ( /^image\\//.test( file.type ) ) {\n\t\t\t\timages.push(file)\n\t\t\t} else {\n\t\t\t\tuploader.addFile( rml.file(file) )\n\t\t\t}\n\t\t} )\n\t\tif ( images.length ) {\n\t\t\tconst uploadFiles = await imageDialog( images )\n\t\t\tuploadFiles.forEach( file => uploader.addFile( rml.file(file) ) )\n\t\t}\n\t}\n})\n","// Compatibility with [Real Media Library](https://wordpress.org/plugins/real-media-library-lite/)\n// @see https://github.com/mcguffin/the-paste/issues/47\n\nclass Supports {\n\tget svg() {\n\t\treturn _wpPluploadSettings.defaults.filters.mime_types[0].extensions.split(',').includes('svg')\n\t}\n\tget webp() {\n\t\treturn document.createElement('canvas').toDataURL('image/webp').indexOf('data:image/webp') == 0\n\t}\n}\n\nconst rml = {\n\tfile: file => {\n\t\tif ( ! file.getSource ) {\n\t\t\t// return native file object\n\t\t\t// mimic mOxie.Blob.getSource()\n\t\t\tfile.getSource = () => {\n\t\t\t\treturn file\n\t\t\t}\n\t\t}\n\t\treturn file\n\t}\n}\n\nconst supports = new Supports()\n\nmodule.exports = { rml, supports }\n","import { supports } from 'compat'\nimport { safeFilename } from 'filename'\n\n\nconst itemHandler = type => {\n\treturn {\n\t\t'text/plain': async item => {\n\t\t\tconst str = await Converter.itemToString( item )\n\t\t\tif ( str.toLowerCase().indexOf('<svg') >= 0 ) {\n\t\t\t\tconst domParser = new DOMParser()\n\t\t\t\tif ( domParser.parseFromString(str,'image/svg+xml').querySelector('svg') ) {\n\t\t\t\t\treturn [ Converter.stringToFile( str, 'image/svg+xml' ) ]\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn []\n\t\t},\n\t\t'text/html': async item => {\n\t\t\tconst loc = new URL( document.location )\n\t\t\tconst div = document.createElement('div')\n\t\t\tdiv.innerHTML = await Converter.itemToString( item )\n\n\t\t\tconst imgs = Array.from( div.querySelectorAll('img') )\n\t\t\t\t.filter( img => {\n\t\t\t\t\t// remove images from same domain\n\t\t\t\t\tconst u = new URL(img.src)\n\t\t\t\t\treturn ! ['http:','https:'].includes(u.protocol) || loc.hostname !== u.hostname\n\t\t\t\t} )\n\t\t\t\t.map( img => Converter.elementToFile(img) )\n\n\t\t\treturn new Promise( (resolve,reject) => {\n\t\t\t\tPromise.allSettled( imgs ).then( result => resolve( Array.from(result).map( promise => promise.value )) )\n\t\t\t})\n\t\t},\n\t\t// 'application/x-vnd.google-docs-image-clip+wrapped': async item => await Converter.gdocsItemToFiles( item ), // <== dont need this\n\t}[type]??(()=>new Promise((resolve,reject)=>resolve([])))\n}\n\nconst Converter = {\n\tclipboardItemsToFiles: clipboardItems => {\n\t\tconst files = []\n\t\treturn new Promise((resolve,reject) => {\n\t\t\tconst promises = Array.from(clipboardItems).map( item => {\n\t\t\t\tif ( 'string' === item.kind ) {\n\t\t\t\t\tconst handler = itemHandler(item.type)\n\t\t\t\t\treturn handler( item )\n\t\t\t\t\t\t.then( f => {\n\t\t\t\t\t\t\tfiles.push( ...f.filter( fl => fl.size > 0 ) )\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.catch( err => console.error(err) )\n\t\t\t\t}\n\t\t\t})\n\t\t\tPromise.allSettled(promises).then( () => resolve(files))\n\t\t})\n\t},\n\tclipboardItemsToHtml:  async clipboardItems => {\n\t\tlet i, item\n\t\tfor ( i=0; i < clipboardItems.length; i++ ) {\n\t\t\titem = clipboardItems[i]\n\t\t\tif ( 'string' === item.kind && 'text/html' === item.type ) {\n\t\t\t\treturn await Converter.itemToString( item )\n\t\t\t}\n\t\t}\n\t\treturn ''\n\t},\n\tgdocsItemToSources: async item => new Promise( (resolve, reject) => {\n\t\titem.getAsString( async str => {\n\t\t\tconst src = Object.values(JSON.parse(JSON.parse( str ).data ).image_urls )\n\t\t\tresolve(src)\n\t\t} )\n\t}),\n\tgdocsItemToFiles: async item => {\n\t\tlet i\n\t\tconst sources = await Converter.gdocsItemToSources(item)\n\t\tconst files = []\n\t\tfor ( i=0;i<sources.length; i++ ) {\n\t\t\tfiles.push( await Converter.blobUrlToFile(sources[i]) )\n\t\t}\n\t\treturn files\n\t},\n\titemToString: async item => new Promise( (resolve, reject) => {\n\t\titem.getAsString( str => resolve(str) )\n\t}),\n\n\telementToFile: async el => {\n\t\tconst file = await Converter.urlToFile(el.src,el.alt)\n\t\treturn file\n\t},\n\n\turlToFile: async ( url, filename = '') => {\n\t\tlet file\n\t\tconst schema = url.substr( 0, url.indexOf(':') )\n\t\tif ( 'data' === schema ) {\n\t\t\tfile = Converter.dataUrlToFile( url, filename )\n\t\t} else if ( ['blob','http','https'].includes( schema ) ) {\n\t\t\tfile = await Converter.blobUrlToFile( url, filename )\n\t\t}\n\t\treturn file\n\t},\n\turlToMime: async url => {\n\t\tconst schema = url.substr( 0, url.indexOf(':') )\n\t\tlet mime\n\t\tif ( 'data' === schema ) {\n\t\t\tmime = Converter.dataUrlToMime( url )\n\t\t} else if ( ['blob','http','https'].includes( schema ) ) {\n\t\t\tmime = await Converter.blobUrlToMime( url )\n\t\t}\n\t\treturn mime\n\t},\n\turlToType: async url => {\n\t\tconst mime = await Converter.urlToMime(url)\n\t\treturn mime.substr( 0, mime.indexOf('/'))\n\t},\n\turlToBlobUrl: async (url) => {\n\t\tconst file = await Converter.blobUrlToFile( url )\n\t\treturn Converter.fileToBlobUrl( file )\n\t},\n\n\tstringToFile: (str, type) => {\n\t\treturn Converter.blobToFile( new Blob( [str], {type} ) )\n\t},\n\n\tblobToFile: ( blob, filename = '' ) => {\n\t\treturn new File([blob], safeFilename( blob, filename ), { type: blob.type } );\n\t},\n\tblobUrlToMime: async blobUrl =>{\n\t\tconst blob = await Converter.blobUrlToBlob(blobUrl)\n\t\treturn blob.type\n\t},\n\tblobUrlToType: async blobUrl => {\n\t\tconst blob = await Converter.blobUrlToBlob(blobUrl)\n\t\treturn blob.type.substr(0,blob.type.indexOf('/'))\n\t},\n\tblobUrlToBlob: async ( blobUrl, filename = '' ) => {\n\t\tconst blob = await fetch( blobUrl ).then( r => r.blob() );\n\t\treturn blob\n\t},\n\tblobUrlToFile: async ( blobUrl, filename = '' ) => {\n\t\tconst blob = await Converter.blobUrlToBlob(blobUrl)\n\t\treturn Converter.blobToFile( blob, filename )\n\t},\n\tblobUrlToDataUrl: async blobUrl => {\n\t\tconst blob = await fetch(blobUrl).then( r => r.blob() );\n\t\tconst dataurl = await Converter.fileToDataUrl(blob)\n\t\treturn dataurl\n\t},\n\n\n\tdataUrlToMime: dataurl => dataurl.match('data:([^;]+);')[1],\n\n\tdataUrlToType: dataurl => dataurl.match('data:([^\\/]+)\\/')[1],\n\n\tdataUrlToBlob: ( dataurl ) => {\n\t\tlet arr = dataurl.split(','),\n\t\t\ttype = arr[0].match(/:(.*?);/)[1],\n\t\t\tbstr = atob(arr[1]),\n\t\t\tn = bstr.length,\n\t\t\tu8arr = new Uint8Array(n);\n\n\t\twhile(n--){\n\t\t\tu8arr[n] = bstr.charCodeAt(n);\n\t\t}\n\t\treturn new Blob( [u8arr], { type: type } )\n\t},\n\n\tdataUrlToFile: ( dataurl, filename = '' ) => Converter.blobToFile( Converter.dataUrlToBlob(dataurl), filename ),\n\n\tdataUrlToBlobUrl: dataurl => Converter.fileToBlobUrl( Converter.dataUrlToBlob( dataurl ) ),\n\n\tfileToBlobUrl: file => URL.createObjectURL(file),\n\n\tfileToDataUrl: file => new Promise( ( resolve, reject ) => {\n\t\tconst fr = new FileReader()\n\t\tfr.addEventListener('load', () => resolve( fr.result )  )\n\t\tfr.readAsDataURL( file )\n\t}),\n}\n\nmodule.exports = Converter\n","import mime from 'mime'\n\n/**\n *\tGenerate a filename\n */\nconst generateFilename = suffix => {\n\n\tconst zerofill = (n,len = 2) => {\n\t\treturn ('00' + n.toString()).substr(-len)\n\t}\n\n\tlet name = thepaste.options.default_filename\n\n\tconst now = new Date(),\n\t\tpostname = document.querySelector('#post [name=\"post_title\"]#title')?.value\n\t\t\t|| document.querySelector('.wp-block-post-title')?.textContent\n\t\t\t|| document.querySelector('h1')?.textContent,\n\t\treplace_values = thepaste.options.filename_values,\n\t\t// username = document.querySelector('.display-name')?.textContent,\n\t\tmap = [\n\t\t\t{ s: '%Y', r: now.getFullYear() },\n\t\t\t{ s: '%y', r: now.getFullYear() % 100 },\n\t\t\t{ s: '%m', r: zerofill(now.getMonth() + 1) },\n\t\t\t{ s: '%d', r: zerofill(now.getDate()) },\n\t\t\t{ s: '%e', r: now.getDate() },\n\t\t\t{ s: '%H', r: zerofill(now.getHours()) },\n\t\t\t{ s: '%I', r: zerofill(now.getHours() % 12 ) },\n\t\t\t{ s: '%M', r: zerofill(now.getMinutes()) },\n\t\t\t{ s: '%S', r: zerofill(now.getSeconds()) },\n\t\t\t{ s: '%s', r: Math.floor( now.getTime() / 1000 ) },\n\t\t\t{ s: '%x', r: now.toLocaleDateString() },\n\t\t\t{ s: '%X', r: now.toLocaleTimeString() }\n\t\t];\n\tif ( 'undefined' !== typeof postname ) {\n\t\tmap.push( { s: '<postname>', r: postname } );\n\t} else {\n\t\tmap.push( { s: '<postname>', r: '' } );\n\t}\n\tObject.keys( replace_values ).forEach( k => {\n\t\tif ( !! replace_values[k] ) {\n\t\t\tmap.push( { s: `<${k}>`, r: replace_values[k] } );\n\t\t} else {\n\t\t\tmap.push( { s: `<${k}>`, r: '' } );\n\t\t}\n\t})\n\tmap.forEach(function(el){\n\t\tname = name.replace( el.s, el.r )\n\t})\n\tif ( 'string' === typeof suffix) {\n\t\tname += '.' + suffix;\n\t}\n\treturn name;\n}\nconst safeFilename = ( file, filename = '' ) => {\n\tlet type = file.type\n\n\tconst suffix = mime.extension(type)\n\tfilename = filename.replace(/[^\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\p{Zs}]/ug,'-').trim()\n\tif ( ! filename ) {\n\t\tfilename = generateFilename( suffix )\n\t}\n\tif ( suffix !== filename.split('.').pop() ) {\n\t\tfilename += `.${suffix}`\n\t}\n\treturn filename\n}\n\nmodule.exports = { generateFilename, safeFilename }\n","import $ from 'jquery'\nimport ImageList from 'image-list'\n\nlet modal = null\nlet list  = null\n\nconst imageDialog = images => {\n\treturn new Promise( (resolve,reject) => {\n\t\tif ( modal !== null ) {\n\t\t\tlist.addFiles(images)\n\t\t\tresolve([])\n\t\t\treturn\n\t\t}\n\t\tmodal = new wp.media.view.Modal( {\n\t\t\tevents: {\n\t\t\t\t'keydown': function(e) {\n\t\t\t\t\tif ( e.key === 'Enter' ) {\n\t\t\t\t\t\tlist.submit()\n\t\t\t\t\t} else if ( e.key === 'Escape' ) {\n\t\t\t\t\t\tmodal.close()\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'click .media-modal-close': function(e) {\n\t\t\t\t\tmodal.close()\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontroller : {\n\t\t\t\ttrigger: () => {},\n\t\t\t},\n\t\t\ttitle      : thepaste.l10n.the_paste\n\t\t} );\n\t\tlist = new ImageList( { controller: modal })\n\t\tconst isModal = $('body').is('.modal-open')\n\t\tlist.on( 'thepaste:submit', async () => {\n\t\t\tconst files = await list.getFiles()\n\t\t\tmodal.close()\n\t\t\tresolve( files )\n\t\t})\n\t\tlist.on('thepaste:cancel',() => {\n\t\t\tmodal.close()\n\t\t\tresolve([])\n\t\t} )\n\t\tmodal.content( list );\n\t\tlist.addFiles(images)\n\t\tmodal.open();\n\t\tmodal.on('close', () => {\n\t\t\t$('body').toggleClass( 'the-paste-modal-open', false )\n\t\t\t$('body').toggleClass( 'modal-open', isModal )\n\t\t\tsetTimeout( () => {\n\t\t\t\tmodal.remove()\n\t\t\t\tmodal = null\n\t\t\t}, 10 )\n\t\t})\n\t\t$('body').toggleClass( 'the-paste-modal-open', true )\n\t})\n}\n\nmodule.exports = imageDialog\n","import Converter from 'converter'\nimport mime from 'mime'\nimport { supports } from 'compat'\nimport { generateFilename } from 'filename'\n\nconst ImageListItem = wp.media.View.extend({\n\ttagName:'form',\n\ttemplate: wp.template('the-paste-image-list-item'),\n\tclassName: 'the-paste-image-list-item',\n\tevents: {\n\t\t'click [name=\"discard\"]': 'discard',\n\t\t'change [name=\"the-paste-format\"]': 'updateView',\n\t},\n\tinitialize : function( { file } ) {\n\t\twp.media.View.prototype.initialize.apply( this, arguments );\n\t\tthis.file = file\n\t\tnew Promise( (resolve,reject) => {\n\t\t\tconst rawImage = new Image();\n\t\t\trawImage.addEventListener(\"load\", function () {\n\t\t\t\tresolve(rawImage);\n\t\t\t});\n\t\t\trawImage.src = Converter.fileToBlobUrl(file);\n\t\t})\n\t\t.then( rawImage => {\n\t\t\tlet hasSize = rawImage.width && rawImage.height\n\t\t\tthis.canvas = this.$('canvas').get(0)\n\n\t\t\tif ( 'image/svg+xml' === this.file.type ) {\n\t\t\t\t// append image to DOM to get actual size\n\t\t\t\tif ( hasSize ) {\n\t\t\t\t\tdocument.body.append(rawImage)\n\t\t\t\t} else {\n\t\t\t\t\tthis.canvas.after(rawImage)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// draw canvas\n\t\t\tthis.canvas.width = rawImage.width;\n\t\t\tthis.canvas.height = rawImage.height;\n\t\t\tthis.canvas.getContext(\"2d\").drawImage(rawImage, 0, 0);\n\n\t\t\tif ( 'image/svg+xml' === this.file.type ) {\n\t\t\t\tif ( hasSize ) {\n\t\t\t\t\trawImage.remove()\n\t\t\t\t} else {\n\t\t\t\t\t// no known size: svg only\n\t\t\t\t\tthis.$(`[data-format]:not([data-format=\"image/svg+xml\"])`).remove()\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\tupdateView: function() {\n\t\t// if input fmt != output fmt\n\t\tconst outputFormat = this.$('[name=\"the-paste-format\"]:checked').val()\n\t\tif ( outputFormat !== this.file.type && ['image/webp','image/jpeg'].includes( outputFormat ) ) {\n\t\t\tthis.$('.the-paste-quality').show()\n\t\t} else {\n\t\t\tthis.$('.the-paste-quality').hide()\n\t\t}\n\t},\n\trender: function() {\n\t\twp.media.View.prototype.render.apply(this,arguments);\n\n\t\tconst type     = this.file.type\n\t\tconst basename = this.file.name.replace(/\\.([^\\.]*)$/,'')\n\n\t\tif ( ! supports.webp ) {\n\t\t\tif ( 'image/webp' !== type ) {\n\t\t\t\tthis.$(`[data-format=\"image/webp\"]`).remove()\n\t\t\t}\n\t\t}\n\n\t\tthis.$(`[name=\"the-paste-format\"][value=\"${type}\"]`).prop('checked', true )\n\t\tthis.$('[name=\"the-paste-filename\"]').val( basename )\n\t\tthis.$('[name=\"the-paste-filename\"]').prop( 'placeholder', generateFilename() )\n\n\t\tif ( ! supports.svg || 'image/svg+xml' !== type ) {\n\t\t\tthis.$(`[data-format=\"image/svg+xml\"]`).remove()\n\t\t\tif ( 'image/svg+xml' === type ) {\n\t\t\t\tthis.$(`[name=\"the-paste-format\"][value=\"image/png\"]`).prop('checked',true)\n\t\t\t}\n\t\t}\n\n\t\tthis.updateView()\n\t},\n\tgetFile: function() {\n\t\tconst type = this.$('[name=\"the-paste-format\"]:checked').val()\n\t\tconst name = this.$('[name=\"the-paste-filename\"]').val() || generateFilename()\n\t\tconst filename = `${name}.${mime.extension(type)}`\n\t\tconst quality  = parseFloat( this.$('[name=\"the-paste-quality\"]').val() ) || thepaste.options.jpeg_quality\n\t\t// upload as-is\n\n\t\tif ( this.file.type === type ) {\n\t\t\treturn new Promise((resolve,reject) => {\n\t\t\t\tresolve( new File( [this.file], filename, { type } ) )\n\t\t\t})\n\t\t}\n\n\t\t// type conversion\n\t\treturn new Promise((resolve,reject) => {\n\t\t\tthis.canvas.toBlob( blob => {\n\t\t\t\tresolve( Converter.blobToFile( blob, filename ) )\n\t\t\t}, type, quality * 0.01 )\n\t\t})\n\t},\n\tdiscard: function() {\n\t\tthis.controller.discardItem(this)\n\t}\n})\n\nconst ImageList = wp.media.View.extend({\n\ttemplate: wp.template('the-paste-image-list'),\n\tclassName: 'the-paste-image-list',\n\tevents: {\n\t\t'click .media-frame-toolbar button': 'submit',\n\t},\n\tinitialize : function() {\n\t\twp.media.View.prototype.initialize.apply( this, arguments );\n\t\tthis.files = []\n\t\tthis.items = []\n\t\tthis.button = new wp.media.view.Button({\n\t\t\tclassName: 'button-primary button-hero',\n\t\t})\n\t\tthis.render()\n\t},\n\tdiscardItem:function(item) {\n\t\tthis.files = this.files.filter( file => file !== item.file )\n\t\tthis.items = this.items.filter( it => it !== item )\n\t\titem.$el.remove()\n\t\tif ( ! this.items.length ) {\n\t\t\tthis.trigger('thepaste:cancel')\n\t\t}\n\t},\n\taddFiles: function( files ) {\n\t\tthis.files.push( ...files )\n\t\tfiles.forEach( file => {\n\t\t\tconst item = new ImageListItem({file,controller:this})\n\t\t\titem.render()\n\t\t\tthis.$('.content').append(item.$el)\n\t\t\tthis.items.push( item )\n\t\t\titem.render()\n\t\t} )\n\t},\n\tgetFiles: async function() {\n\t\tconst files = []\n\t\tfor ( const item of this.items ) {\n\t\t\tfiles.push( await item.getFile() )\n\t\t}\n\t\treturn files\n\t},\n\tsubmit: function() {\n\t\tthis.trigger('thepaste:submit')\n\t},\n})\n\nmodule.exports = ImageList\n","const exts  = Object.keys( thepaste.options.mime_types )\nconst types = Object.values( thepaste.options.mime_types )\n\n// windows\nexts.push('zip')\ntypes.push('application/x-zip-compressed')\n\nmodule.exports = {\n\textension: type => {\n\t\tconst idx = types.indexOf( type )\n\t\treturn -1 !== idx ? exts[idx] : false\n\t},\n\ttype: ext => {\n\t\tconst idx = exts.indexOf( ext )\n\t\treturn -1 !== idx ? types[idx] : false\n\t}\n}\n"]}